# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class CensusQueryResponse(EventTypeAbstractModel):
    Meta_: CensusQueryResponseMeta = Field(..., alias="Meta")
    Patients_: List[CensusQueryResponsePatient] = Field(None, alias="Patients")


class CensusQueryResponseMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[CensusQueryResponseMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[CensusQueryResponseMetaLog] = Field(None, alias="Logs")
    Message_: CensusQueryResponseMetaMessage = Field(None, alias="Message")
    Source_: CensusQueryResponseMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: CensusQueryResponseMetaTransmission = Field(
        None, alias="Transmission"
    )


class CensusQueryResponseMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class CensusQueryResponseMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class CensusQueryResponseMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class CensusQueryResponseMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class CensusQueryResponseMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class CensusQueryResponsePatient(RedoxAbstractModel):
    Demographics_: CensusQueryResponsePatientDemographics = Field(
        None, alias="Demographics"
    )
    Identifiers_: List[CensusQueryResponsePatientIdentifier] = Field(
        None, alias="Identifiers"
    )
    Visits_: List[CensusQueryResponsePatientVisit] = Field(None, alias="Visits")


class CensusQueryResponsePatientDemographics(RedoxAbstractModel):
    Address_: CensusQueryResponsePatientDemographicsAddress = Field(
        None, alias="Address"
    )
    Citizenship_: List[str] = Field(None, alias="Citizenship")
    DOB_: Union[str, None] = Field(None, alias="DOB")
    DeathDateTime_: Union[str, None] = Field(None, alias="DeathDateTime")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    IsHispanic_: Union[bool, None] = Field(None, alias="IsHispanic")
    Language_: Union[str, None] = Field(None, alias="Language")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MaritalStatus_: Union[str, None] = Field(None, alias="MaritalStatus")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    PhoneNumber_: CensusQueryResponsePatientDemographicsPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Race_: Union[str, None] = Field(None, alias="Race")
    Religion_: Union[str, None] = Field(None, alias="Religion")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class CensusQueryResponsePatientDemographicsAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class CensusQueryResponsePatientDemographicsPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")
    Office_: Union[str, None] = Field(None, alias="Office")


class CensusQueryResponsePatientIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class CensusQueryResponsePatientVisit(RedoxAbstractModel):
    Location_: CensusQueryResponsePatientVisitLocation = Field(None, alias="Location")
    PatientClass_: Union[str, None] = Field(None, alias="PatientClass")
    VisitDateTime_: Union[str, None] = Field(None, alias="VisitDateTime")
    VisitNumber_: Union[str, None] = Field(None, alias="VisitNumber")


class CensusQueryResponsePatientVisitLocation(RedoxAbstractModel):
    Bed_: Union[str, None] = Field(None, alias="Bed")
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        CensusQueryResponsePatientVisitLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        CensusQueryResponsePatientVisitLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class CensusQueryResponsePatientVisitLocationDepartmentIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class CensusQueryResponsePatientVisitLocationFacilityIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


CensusQueryResponse.model_rebuild()
CensusQueryResponseMeta.model_rebuild()
CensusQueryResponsePatient.model_rebuild()
CensusQueryResponsePatientDemographics.model_rebuild()
CensusQueryResponsePatientVisit.model_rebuild()
CensusQueryResponsePatientVisitLocation.model_rebuild()
