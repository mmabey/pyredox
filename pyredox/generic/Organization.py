# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from pyredox import organization
from ..abstract_base import GenericEventTypeAbstractModel
from . import types as generic


class _Organization(GenericEventTypeAbstractModel):
    _redox_module = organization


class New(_Organization):
    Directory_: str = Field(..., alias="Directory")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Organizations_: List[generic.Organization] = Field(..., alias="Organizations")


class Query(_Organization):
    Active_: Union[bool, None] = Field(None, alias="Active")
    Directory_: str = Field(..., alias="Directory")
    Identifier_: generic.Identifier = Field(None, alias="Identifier")
    Index_: Union[str, None] = Field(None, alias="Index")
    LastUpdated_: Union[str, None] = Field(None, alias="LastUpdated")
    Limit_: Union[str, None] = Field(None, alias="Limit")
    Meta_: generic.Meta = Field(..., alias="Meta")
    NameSearch_: generic.NameSearch = Field(None, alias="NameSearch")
    RadiusSearch_: generic.RadiusSearch = Field(None, alias="RadiusSearch")
    State_: Union[str, None] = Field(None, alias="State")


class QueryResponse(_Organization):
    Directory_: str = Field(..., alias="Directory")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Organizations_: List[generic.Organization] = Field(..., alias="Organizations")
    Paging_: generic.Paging = Field(None, alias="Paging")


class Update(_Organization):
    Action_: str = Field(..., alias="Action")
    Directory_: str = Field(..., alias="Directory")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Organizations_: List[generic.Organization] = Field(..., alias="Organizations")
