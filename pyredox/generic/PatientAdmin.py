# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from pyredox import patientadmin
from ..abstract_base import GenericEventTypeAbstractModel
from . import types as generic


class _PatientAdmin(GenericEventTypeAbstractModel):
    _redox_module = patientadmin


class Arrival(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class Cancel(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class CensusQuery(_PatientAdmin):
    Departments_: List[str] = Field(None, alias="Departments")
    Facilities_: List[str] = Field(None, alias="Facilities")
    Meta_: generic.Meta = Field(..., alias="Meta")
    PatientClasses_: List[str] = Field(None, alias="PatientClasses")


class CensusQueryResponse(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patients_: List[generic.Patient] = Field(None, alias="Patients")


class Discharge(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class NewPatient(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")


class PatientMerge(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")


class PatientUpdate(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")


class PreAdmit(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class Registration(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class Transfer(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class VisitMerge(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(..., alias="Visit")


class VisitQuery(_PatientAdmin):
    Departments_: List[str] = Field(None, alias="Departments")
    Facilities_: List[str] = Field(None, alias="Facilities")
    Meta_: generic.Meta = Field(..., alias="Meta")
    PatientClasses_: List[str] = Field(None, alias="PatientClasses")
    Patients_: List[generic.Patient] = Field(None, alias="Patients")
    VisitNumbers_: List[str] = Field(None, alias="VisitNumbers")
    VisitStartDateTime_: Union[str, None] = Field(None, alias="VisitStartDateTime")
    VisitStatuses_: List[str] = Field(None, alias="VisitStatuses")


class VisitQueryResponse(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patients_: List[generic.Patient] = Field(None, alias="Patients")


class VisitUpdate(_PatientAdmin):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")
