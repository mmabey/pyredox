# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List

from pydantic import Field

from pyredox import notes
from ..abstract_base import GenericEventTypeAbstractModel
from . import types as generic


class _Notes(GenericEventTypeAbstractModel):
    _redox_module = notes


class Delete(_Notes):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Note_: generic.Note = Field(..., alias="Note")
    Orders_: List[generic.Order] = Field(None, alias="Orders")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class New(_Notes):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Note_: generic.Note = Field(..., alias="Note")
    Orders_: List[generic.Order] = Field(None, alias="Orders")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class Query(_Notes):
    DocumentIDs_: List[str] = Field(None, alias="DocumentIDs")
    DocumentTypes_: List[str] = Field(None, alias="DocumentTypes")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patients_: List[generic.Patient] = Field(None, alias="Patients")
    VisitNumbers_: List[str] = Field(None, alias="VisitNumbers")


class QueryResponse(_Notes):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Notes_: List[generic.Note] = Field(None, alias="Notes")


class Replace(_Notes):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Note_: generic.Note = Field(..., alias="Note")
    Orders_: List[generic.Order] = Field(None, alias="Orders")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")
