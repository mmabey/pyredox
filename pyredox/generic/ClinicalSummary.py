# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from pyredox import clinicalsummary
from ..abstract_base import GenericEventTypeAbstractModel
from . import types as generic


class _ClinicalSummary(GenericEventTypeAbstractModel):
    _redox_module = clinicalsummary


class DocumentGet(_ClinicalSummary):
    Document_: generic.Document = Field(..., alias="Document")
    Meta_: generic.Meta = Field(..., alias="Meta")


class DocumentGetResponse(_ClinicalSummary):
    Data_: str = Field(..., alias="Data")
    Document_: generic.Document = Field(..., alias="Document")
    FileType_: str = Field(..., alias="FileType")
    Meta_: generic.Meta = Field(..., alias="Meta")


class DocumentQuery(_ClinicalSummary):
    Document_: generic.Document = Field(None, alias="Document")
    Location_: generic.Location = Field(None, alias="Location")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class DocumentQueryResponse(_ClinicalSummary):
    Documents_: List[generic.Document] = Field(..., alias="Documents")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(None, alias="Patient")


class PatientPush(_ClinicalSummary):
    AdvanceDirectives_: List[generic.AdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[generic.Allergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    CareTeams_: List[generic.CareTeam] = Field(None, alias="CareTeams")
    Encounters_: List[generic.Encounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[generic.FamilyHistory] = Field(None, alias="FamilyHistory")
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: generic.FunctionalStatus = Field(None, alias="FunctionalStatus")
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[generic.Goal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: generic.Header = Field(None, alias="Header")
    HealthConcerns_: List[generic.HealthConcern] = Field(None, alias="HealthConcerns")
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[generic.Immunization] = Field(None, alias="Immunizations")
    Insurances_: List[generic.Insurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    MedicalEquipment_: List[generic.MedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    MedicalHistoryText_: Union[str, None] = Field(None, alias="MedicalHistoryText")
    Medications_: List[generic.Medication] = Field(None, alias="Medications")
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: generic.Meta = Field(..., alias="Meta")
    NoteSections_: List[generic.NoteSection] = Field(None, alias="NoteSections")
    PlanOfCare_: generic.PlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[generic.Problem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: generic.Procedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ResolvedProblems_: List[generic.ResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[generic.Result] = Field(None, alias="Results")
    SocialHistory_: generic.SocialHistory = Field(None, alias="SocialHistory")
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    VitalSigns_: List[generic.VitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")


class PatientQuery(_ClinicalSummary):
    Location_: generic.Location = Field(None, alias="Location")
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")


class PatientQueryResponse(_ClinicalSummary):
    AdvanceDirectives_: List[generic.AdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[generic.Allergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    CareTeams_: List[generic.CareTeam] = Field(None, alias="CareTeams")
    Encounters_: List[generic.Encounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[generic.FamilyHistory] = Field(None, alias="FamilyHistory")
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: generic.FunctionalStatus = Field(None, alias="FunctionalStatus")
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[generic.Goal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: generic.Header = Field(None, alias="Header")
    HealthConcerns_: List[generic.HealthConcern] = Field(None, alias="HealthConcerns")
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[generic.Immunization] = Field(None, alias="Immunizations")
    Insurances_: List[generic.Insurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    MedicalEquipment_: List[generic.MedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    Medications_: List[generic.Medication] = Field(None, alias="Medications")
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: generic.Meta = Field(..., alias="Meta")
    PlanOfCare_: generic.PlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[generic.Problem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: generic.Procedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ResolvedProblems_: List[generic.ResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[generic.Result] = Field(None, alias="Results")
    SocialHistory_: generic.SocialHistory = Field(None, alias="SocialHistory")
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    VitalSigns_: List[generic.VitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")


class VisitPush(_ClinicalSummary):
    AdmissionDiagnosis_: List[generic.AdmissionDiagnosis] = Field(
        None, alias="AdmissionDiagnosis"
    )
    AdmissionDiagnosisText_: Union[str, None] = Field(
        None, alias="AdmissionDiagnosisText"
    )
    AdvanceDirectives_: List[generic.AdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[generic.Allergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    Assessment_: generic.Assessment = Field(None, alias="Assessment")
    AssessmentText_: Union[str, None] = Field(None, alias="AssessmentText")
    CareTeams_: List[generic.CareTeam] = Field(None, alias="CareTeams")
    ChiefComplaintText_: Union[str, None] = Field(None, alias="ChiefComplaintText")
    DischargeDiagnosis_: List[generic.DischargeDiagnosis] = Field(
        None, alias="DischargeDiagnosis"
    )
    DischargeDiagnosisText_: Union[str, None] = Field(
        None, alias="DischargeDiagnosisText"
    )
    DischargeMedications_: List[generic.DischargeMedication] = Field(
        None, alias="DischargeMedications"
    )
    DischargeMedicationsText_: Union[str, None] = Field(
        None, alias="DischargeMedicationsText"
    )
    Encounters_: List[generic.Encounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[generic.FamilyHistory] = Field(None, alias="FamilyHistory")
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: generic.FunctionalStatus = Field(None, alias="FunctionalStatus")
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[generic.Goal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: generic.Header = Field(None, alias="Header")
    HealthConcerns_: List[generic.HealthConcern] = Field(None, alias="HealthConcerns")
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    HistoryOfPresentIllnessText_: Union[str, None] = Field(
        None, alias="HistoryOfPresentIllnessText"
    )
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[generic.Immunization] = Field(None, alias="Immunizations")
    Instructions_: List[generic.Instruction] = Field(None, alias="Instructions")
    InstructionsText_: Union[str, None] = Field(None, alias="InstructionsText")
    Insurances_: List[generic.Insurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    InterventionsText_: Union[str, None] = Field(None, alias="InterventionsText")
    MedicalEquipment_: List[generic.MedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    MedicalHistoryText_: Union[str, None] = Field(None, alias="MedicalHistoryText")
    Medications_: List[generic.Medication] = Field(None, alias="Medications")
    MedicationsAdministered_: List[generic.MedicationsAdministered] = Field(
        None, alias="MedicationsAdministered"
    )
    MedicationsAdministeredText_: Union[str, None] = Field(
        None, alias="MedicationsAdministeredText"
    )
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: generic.Meta = Field(..., alias="Meta")
    NoteSections_: List[generic.NoteSection] = Field(None, alias="NoteSections")
    ObjectiveText_: Union[str, None] = Field(None, alias="ObjectiveText")
    PhysicalExamText_: Union[str, None] = Field(None, alias="PhysicalExamText")
    PlanOfCare_: generic.PlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[generic.Problem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: generic.Procedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ReasonForReferralText_: Union[str, None] = Field(
        None, alias="ReasonForReferralText"
    )
    ReasonForVisit_: List[generic.ReasonForVisit] = Field(None, alias="ReasonForVisit")
    ReasonForVisitText_: Union[str, None] = Field(None, alias="ReasonForVisitText")
    ResolvedProblems_: List[generic.ResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[generic.Result] = Field(None, alias="Results")
    ReviewOfSystemsText_: Union[str, None] = Field(None, alias="ReviewOfSystemsText")
    SocialHistory_: generic.SocialHistory = Field(None, alias="SocialHistory")
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    SubjectiveText_: Union[str, None] = Field(None, alias="SubjectiveText")
    VitalSigns_: List[generic.VitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")


class VisitQuery(_ClinicalSummary):
    Meta_: generic.Meta = Field(..., alias="Meta")
    Patient_: generic.Patient = Field(..., alias="Patient")
    Visit_: generic.Visit = Field(None, alias="Visit")


class VisitQueryResponse(_ClinicalSummary):
    AdmissionDiagnosis_: List[generic.AdmissionDiagnosis] = Field(
        None, alias="AdmissionDiagnosis"
    )
    AdmissionDiagnosisText_: Union[str, None] = Field(
        None, alias="AdmissionDiagnosisText"
    )
    AdvanceDirectives_: List[generic.AdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[generic.Allergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    Assessment_: generic.Assessment = Field(None, alias="Assessment")
    AssessmentText_: Union[str, None] = Field(None, alias="AssessmentText")
    CareTeams_: List[generic.CareTeam] = Field(None, alias="CareTeams")
    ChiefComplaintText_: Union[str, None] = Field(None, alias="ChiefComplaintText")
    DischargeDiagnosis_: List[generic.DischargeDiagnosis] = Field(
        None, alias="DischargeDiagnosis"
    )
    DischargeDiagnosisText_: Union[str, None] = Field(
        None, alias="DischargeDiagnosisText"
    )
    DischargeMedications_: List[generic.DischargeMedication] = Field(
        None, alias="DischargeMedications"
    )
    DischargeMedicationsText_: Union[str, None] = Field(
        None, alias="DischargeMedicationsText"
    )
    Encounters_: List[generic.Encounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[generic.FamilyHistory] = Field(None, alias="FamilyHistory")
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: generic.FunctionalStatus = Field(None, alias="FunctionalStatus")
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[generic.Goal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: generic.Header = Field(None, alias="Header")
    HealthConcerns_: List[generic.HealthConcern] = Field(None, alias="HealthConcerns")
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    HistoryOfPresentIllnessText_: Union[str, None] = Field(
        None, alias="HistoryOfPresentIllnessText"
    )
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[generic.Immunization] = Field(None, alias="Immunizations")
    Instructions_: List[generic.Instruction] = Field(None, alias="Instructions")
    InstructionsText_: Union[str, None] = Field(None, alias="InstructionsText")
    Insurances_: List[generic.Insurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    InterventionsText_: Union[str, None] = Field(None, alias="InterventionsText")
    MedicalEquipment_: List[generic.MedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    Medications_: List[generic.Medication] = Field(None, alias="Medications")
    MedicationsAdministered_: List[generic.MedicationsAdministered] = Field(
        None, alias="MedicationsAdministered"
    )
    MedicationsAdministeredText_: Union[str, None] = Field(
        None, alias="MedicationsAdministeredText"
    )
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: generic.Meta = Field(..., alias="Meta")
    ObjectiveText_: Union[str, None] = Field(None, alias="ObjectiveText")
    PhysicalExamText_: Union[str, None] = Field(None, alias="PhysicalExamText")
    PlanOfCare_: generic.PlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[generic.Problem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: generic.Procedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ReasonForReferralText_: Union[str, None] = Field(
        None, alias="ReasonForReferralText"
    )
    ReasonForVisit_: List[generic.ReasonForVisit] = Field(None, alias="ReasonForVisit")
    ReasonForVisitText_: Union[str, None] = Field(None, alias="ReasonForVisitText")
    ResolvedProblems_: List[generic.ResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[generic.Result] = Field(None, alias="Results")
    ReviewOfSystemsText_: Union[str, None] = Field(None, alias="ReviewOfSystemsText")
    SocialHistory_: generic.SocialHistory = Field(None, alias="SocialHistory")
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    SubjectiveText_: Union[str, None] = Field(None, alias="SubjectiveText")
    VitalSigns_: List[generic.VitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")
