# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class Query(EventTypeAbstractModel):
    Active_: Union[bool, None] = Field(None, alias="Active")
    Directory_: str = Field(..., alias="Directory")
    Identifier_: QueryIdentifier = Field(None, alias="Identifier")
    Index_: Union[str, None] = Field(None, alias="Index")
    LastUpdated_: Union[str, None] = Field(None, alias="LastUpdated")
    Limit_: Union[str, None] = Field(None, alias="Limit")
    Meta_: QueryMeta = Field(..., alias="Meta")
    NameSearch_: QueryNameSearch = Field(None, alias="NameSearch")
    RadiusSearch_: QueryRadiusSearch = Field(None, alias="RadiusSearch")
    State_: Union[str, None] = Field(None, alias="State")


class QueryIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class QueryMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[QueryMetaDestination] = Field(None, alias="Destinations")
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[QueryMetaLog] = Field(None, alias="Logs")
    Message_: QueryMetaMessage = Field(None, alias="Message")
    Source_: QueryMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: QueryMetaTransmission = Field(None, alias="Transmission")


class QueryMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class QueryMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class QueryMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class QueryMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class QueryMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class QueryNameSearch(RedoxAbstractModel):
    SearchType_: Union[str, None] = Field(None, alias="SearchType")
    Value_: Union[str, None] = Field(None, alias="Value")


class QueryRadiusSearch(RedoxAbstractModel):
    Radius_: Union[str, None] = Field(None, alias="Radius")
    ZipCode_: Union[str, None] = Field(None, alias="ZipCode")


Query.model_rebuild()
QueryMeta.model_rebuild()
