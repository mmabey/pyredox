# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class New(EventTypeAbstractModel):
    Directory_: str = Field(..., alias="Directory")
    Meta_: NewMeta = Field(..., alias="Meta")
    Organizations_: List[NewOrganization] = Field(..., alias="Organizations")


class NewMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[NewMetaDestination] = Field(None, alias="Destinations")
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[NewMetaLog] = Field(None, alias="Logs")
    Message_: NewMetaMessage = Field(None, alias="Message")
    Source_: NewMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: NewMetaTransmission = Field(None, alias="Transmission")


class NewMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NewMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class NewMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NewMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NewMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NewOrganization(RedoxAbstractModel):
    Active_: bool = Field(..., alias="Active")
    Address_: NewOrganizationAddress = Field(None, alias="Address")
    Aliases_: List[str] = Field(None, alias="Aliases")
    Contacts_: List[NewOrganizationContact] = Field(None, alias="Contacts")
    DestinationID_: Union[str, None] = Field(None, alias="DestinationID")
    Endpoints_: List[NewOrganizationEndpoint] = Field(None, alias="Endpoints")
    Identifiers_: List[NewOrganizationIdentifier] = Field(None, alias="Identifiers")
    Name_: str = Field(..., alias="Name")
    PartOf_: NewOrganizationPartOf = Field(None, alias="PartOf")
    Type_: NewOrganizationType = Field(None, alias="Type")


class NewOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class NewOrganizationContact(RedoxAbstractModel):
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    Name_: Union[str, None] = Field(None, alias="Name")
    PhoneNumber_: NewOrganizationContactPhoneNumber = Field(None, alias="PhoneNumber")
    Purpose_: Union[str, None] = Field(None, alias="Purpose")


class NewOrganizationContactPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")
    Work_: Union[str, None] = Field(None, alias="Work")


class NewOrganizationEndpoint(RedoxAbstractModel):
    Address_: Union[str, None] = Field(None, alias="Address")
    Attributes_: NewOrganizationEndpointAttributes = Field(None, alias="Attributes")
    ConnectionType_: NewOrganizationEndpointConnectionType = Field(
        None, alias="ConnectionType"
    )
    Identifiers_: List[NewOrganizationEndpointIdentifier] = Field(
        None, alias="Identifiers"
    )
    MIMEType_: Union[str, None] = Field(None, alias="MIMEType")
    Name_: Union[str, None] = Field(None, alias="Name")


class NewOrganizationEndpointAttributes(RedoxAbstractModel):
    Actor_: NewOrganizationEndpointAttributesActor = Field(None, alias="Actor")
    PurposeOfUse_: List[NewOrganizationEndpointAttributesPurposeOfUse] = Field(
        None, alias="PurposeOfUse"
    )
    Roles_: List[NewOrganizationEndpointAttributesRole] = Field(None, alias="Roles")
    Transaction_: Union[str, None] = Field(None, alias="Transaction")
    UseCases_: List[NewOrganizationEndpointAttributesUseCase] = Field(
        None, alias="UseCases"
    )
    Version_: NewOrganizationEndpointAttributesVersion = Field(None, alias="Version")


class NewOrganizationEndpointAttributesActor(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointAttributesPurposeOfUse(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointAttributesRole(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointAttributesUseCase(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointAttributesVersion(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointConnectionType(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationEndpointIdentifier(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Type_: Union[str, None] = Field(None, alias="Type")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewOrganizationPartOf(RedoxAbstractModel):
    Identifier_: NewOrganizationPartOfIdentifier = Field(None, alias="Identifier")


class NewOrganizationPartOfIdentifier(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Type_: Union[str, None] = Field(None, alias="Type")
    Value_: Union[str, None] = Field(None, alias="Value")


class NewOrganizationType(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Value_: Union[str, None] = Field(None, alias="Value")


New.model_rebuild()
NewMeta.model_rebuild()
NewOrganization.model_rebuild()
NewOrganizationContact.model_rebuild()
NewOrganizationEndpoint.model_rebuild()
NewOrganizationEndpointAttributes.model_rebuild()
NewOrganizationPartOf.model_rebuild()
