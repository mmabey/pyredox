# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class DocumentQueryResponse(EventTypeAbstractModel):
    Documents_: List[DocumentQueryResponseDocument] = Field(..., alias="Documents")
    Meta_: DocumentQueryResponseMeta = Field(..., alias="Meta")
    Patient_: DocumentQueryResponsePatient = Field(None, alias="Patient")


class DocumentQueryResponseDocument(RedoxAbstractModel):
    Author_: DocumentQueryResponseDocumentAuthor = Field(None, alias="Author")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    FileType_: Union[str, None] = Field(None, alias="FileType")
    ID_: str = Field(..., alias="ID")
    Locale_: Union[str, None] = Field(None, alias="Locale")
    Location_: DocumentQueryResponseDocumentLocation = Field(None, alias="Location")
    Title_: Union[str, None] = Field(None, alias="Title")
    Type_: DocumentQueryResponseDocumentType = Field(None, alias="Type")
    Visit_: DocumentQueryResponseDocumentVisit = Field(None, alias="Visit")


class DocumentQueryResponseDocumentAuthor(RedoxAbstractModel):
    Address_: DocumentQueryResponseDocumentAuthorAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: DocumentQueryResponseDocumentAuthorLocation = Field(
        None, alias="Location"
    )
    PhoneNumber_: DocumentQueryResponseDocumentAuthorPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class DocumentQueryResponseDocumentAuthorAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class DocumentQueryResponseDocumentAuthorLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        DocumentQueryResponseDocumentAuthorLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        DocumentQueryResponseDocumentAuthorLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class DocumentQueryResponseDocumentAuthorLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class DocumentQueryResponseDocumentAuthorLocationFacilityIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class DocumentQueryResponseDocumentAuthorPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class DocumentQueryResponseDocumentLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")


class DocumentQueryResponseDocumentType(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Name_: Union[str, None] = Field(None, alias="Name")


class DocumentQueryResponseDocumentVisit(RedoxAbstractModel):
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    ID_: Union[str, None] = Field(None, alias="ID")
    StartDateTime_: Union[str, None] = Field(None, alias="StartDateTime")


class DocumentQueryResponseMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[DocumentQueryResponseMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[DocumentQueryResponseMetaLog] = Field(None, alias="Logs")
    Message_: DocumentQueryResponseMetaMessage = Field(None, alias="Message")
    Source_: DocumentQueryResponseMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: DocumentQueryResponseMetaTransmission = Field(
        None, alias="Transmission"
    )


class DocumentQueryResponseMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class DocumentQueryResponseMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class DocumentQueryResponseMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class DocumentQueryResponseMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class DocumentQueryResponseMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class DocumentQueryResponsePatient(RedoxAbstractModel):
    Identifiers_: List[DocumentQueryResponsePatientIdentifier] = Field(
        None, alias="Identifiers"
    )


class DocumentQueryResponsePatientIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


DocumentQueryResponse.model_rebuild()
DocumentQueryResponseDocument.model_rebuild()
DocumentQueryResponseDocumentAuthor.model_rebuild()
DocumentQueryResponseDocumentAuthorLocation.model_rebuild()
DocumentQueryResponseMeta.model_rebuild()
DocumentQueryResponsePatient.model_rebuild()
