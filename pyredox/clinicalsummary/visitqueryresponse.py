# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class VisitQueryResponse(EventTypeAbstractModel):
    AdmissionDiagnosis_: List[VisitQueryResponseAdmissionDiagnosis] = Field(
        None, alias="AdmissionDiagnosis"
    )
    AdmissionDiagnosisText_: Union[str, None] = Field(
        None, alias="AdmissionDiagnosisText"
    )
    AdvanceDirectives_: List[VisitQueryResponseAdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[VisitQueryResponseAllergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    Assessment_: VisitQueryResponseAssessment = Field(None, alias="Assessment")
    AssessmentText_: Union[str, None] = Field(None, alias="AssessmentText")
    CareTeams_: List[VisitQueryResponseCareTeam] = Field(None, alias="CareTeams")
    ChiefComplaintText_: Union[str, None] = Field(None, alias="ChiefComplaintText")
    DischargeDiagnosis_: List[VisitQueryResponseDischargeDiagnosis] = Field(
        None, alias="DischargeDiagnosis"
    )
    DischargeDiagnosisText_: Union[str, None] = Field(
        None, alias="DischargeDiagnosisText"
    )
    DischargeMedications_: List[VisitQueryResponseDischargeMedication] = Field(
        None, alias="DischargeMedications"
    )
    DischargeMedicationsText_: Union[str, None] = Field(
        None, alias="DischargeMedicationsText"
    )
    Encounters_: List[VisitQueryResponseEncounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[VisitQueryResponseFamilyHistory] = Field(
        None, alias="FamilyHistory"
    )
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: VisitQueryResponseFunctionalStatus = Field(
        None, alias="FunctionalStatus"
    )
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[VisitQueryResponseGoal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: VisitQueryResponseHeader = Field(None, alias="Header")
    HealthConcerns_: List[VisitQueryResponseHealthConcern] = Field(
        None, alias="HealthConcerns"
    )
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    HistoryOfPresentIllnessText_: Union[str, None] = Field(
        None, alias="HistoryOfPresentIllnessText"
    )
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[VisitQueryResponseImmunization] = Field(
        None, alias="Immunizations"
    )
    Instructions_: List[VisitQueryResponseInstruction] = Field(
        None, alias="Instructions"
    )
    InstructionsText_: Union[str, None] = Field(None, alias="InstructionsText")
    Insurances_: List[VisitQueryResponseInsurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    InterventionsText_: Union[str, None] = Field(None, alias="InterventionsText")
    MedicalEquipment_: List[VisitQueryResponseMedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    Medications_: List[VisitQueryResponseMedication] = Field(None, alias="Medications")
    MedicationsAdministered_: List[VisitQueryResponseMedicationsAdministered] = Field(
        None, alias="MedicationsAdministered"
    )
    MedicationsAdministeredText_: Union[str, None] = Field(
        None, alias="MedicationsAdministeredText"
    )
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: VisitQueryResponseMeta = Field(..., alias="Meta")
    ObjectiveText_: Union[str, None] = Field(None, alias="ObjectiveText")
    PhysicalExamText_: Union[str, None] = Field(None, alias="PhysicalExamText")
    PlanOfCare_: VisitQueryResponsePlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[VisitQueryResponseProblem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: VisitQueryResponseProcedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ReasonForReferralText_: Union[str, None] = Field(
        None, alias="ReasonForReferralText"
    )
    ReasonForVisit_: List[VisitQueryResponseReasonForVisit] = Field(
        None, alias="ReasonForVisit"
    )
    ReasonForVisitText_: Union[str, None] = Field(None, alias="ReasonForVisitText")
    ResolvedProblems_: List[VisitQueryResponseResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[VisitQueryResponseResult] = Field(None, alias="Results")
    ReviewOfSystemsText_: Union[str, None] = Field(None, alias="ReviewOfSystemsText")
    SocialHistory_: VisitQueryResponseSocialHistory = Field(None, alias="SocialHistory")
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    SubjectiveText_: Union[str, None] = Field(None, alias="SubjectiveText")
    VitalSigns_: List[VisitQueryResponseVitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")


class VisitQueryResponseAdmissionDiagnosis(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAdmissionDiagnosisAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseAdmissionDiagnosisComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseAdmissionDiagnosisStatus = Field(None, alias="Status")


class VisitQueryResponseAdmissionDiagnosisAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAdmissionDiagnosisComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseAdmissionDiagnosisStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAdvanceDirective(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAdvanceDirectiveAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Custodians_: List[VisitQueryResponseAdvanceDirectiveCustodian] = Field(
        None, alias="Custodians"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    ExternalReference_: Union[str, None] = Field(None, alias="ExternalReference")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Type_: VisitQueryResponseAdvanceDirectiveType = Field(None, alias="Type")
    VerifiedBy_: List[VisitQueryResponseAdvanceDirectiveVerifiedBy] = Field(
        None, alias="VerifiedBy"
    )


class VisitQueryResponseAdvanceDirectiveAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAdvanceDirectiveCustodian(RedoxAbstractModel):
    Address_: VisitQueryResponseAdvanceDirectiveCustodianAddress = Field(
        None, alias="Address"
    )
    Credentials_: Union[str, None] = Field(None, alias="Credentials")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    LastName_: Union[str, None] = Field(None, alias="LastName")


class VisitQueryResponseAdvanceDirectiveCustodianAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseAdvanceDirectiveType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAdvanceDirectiveTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAdvanceDirectiveTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAdvanceDirectiveVerifiedBy(RedoxAbstractModel):
    Credentials_: Union[str, None] = Field(None, alias="Credentials")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    LastName_: Union[str, None] = Field(None, alias="LastName")


class VisitQueryResponseAllergy(RedoxAbstractModel):
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[VisitQueryResponseAllergyComment] = Field(None, alias="Comments")
    Criticality_: VisitQueryResponseAllergyCriticality = Field(
        None, alias="Criticality"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Reaction_: List[VisitQueryResponseAllergyReaction] = Field(None, alias="Reaction")
    Severity_: VisitQueryResponseAllergySeverity = Field(None, alias="Severity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseAllergyStatus = Field(None, alias="Status")
    Substance_: VisitQueryResponseAllergySubstance = Field(None, alias="Substance")
    Type_: VisitQueryResponseAllergyType = Field(None, alias="Type")


class VisitQueryResponseAllergyComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseAllergyCriticality(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergyReaction(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAllergyReactionAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")
    Severity_: VisitQueryResponseAllergyReactionSeverity = Field(None, alias="Severity")
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseAllergyReactionAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergyReactionSeverity(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergySeverity(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergyStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergySubstance(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAllergySubstanceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergySubstanceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergyType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseAllergyTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAllergyTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAssessment(RedoxAbstractModel):
    Diagnoses_: List[VisitQueryResponseAssessmentDiagnosis] = Field(
        None, alias="Diagnoses"
    )


class VisitQueryResponseAssessmentDiagnosis(RedoxAbstractModel):
    Codes_: List[VisitQueryResponseAssessmentDiagnosisCode] = Field(None, alias="Codes")
    Comments_: List[VisitQueryResponseAssessmentDiagnosisComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseAssessmentDiagnosisCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseAssessmentDiagnosisComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseCareTeam(RedoxAbstractModel):
    Encounter_: VisitQueryResponseCareTeamEncounter = Field(None, alias="Encounter")
    Members_: List[VisitQueryResponseCareTeamMember] = Field(None, alias="Members")
    Name_: Union[str, None] = Field(None, alias="Name")
    Organization_: VisitQueryResponseCareTeamOrganization = Field(
        None, alias="Organization"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Types_: List[VisitQueryResponseCareTeamType] = Field(None, alias="Types")


class VisitQueryResponseCareTeamEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[VisitQueryResponseCareTeamEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: VisitQueryResponseCareTeamEncounterType = Field(None, alias="Type")


class VisitQueryResponseCareTeamEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseCareTeamEncounterType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseCareTeamEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamMember(RedoxAbstractModel):
    Address_: VisitQueryResponseCareTeamMemberAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    Identifiers_: List[VisitQueryResponseCareTeamMemberIdentifier] = Field(
        None, alias="Identifiers"
    )
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    Roles_: List[VisitQueryResponseCareTeamMemberRole] = Field(None, alias="Roles")
    StartDateTime_: Union[str, None] = Field(None, alias="StartDateTime")
    Telecom_: List[VisitQueryResponseCareTeamMemberTelecom] = Field(
        None, alias="Telecom"
    )


class VisitQueryResponseCareTeamMemberAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseCareTeamMemberIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseCareTeamMemberRole(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseCareTeamMemberRoleAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamMemberRoleAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamMemberTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseCareTeamOrganization(RedoxAbstractModel):
    Address_: VisitQueryResponseCareTeamOrganizationAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[VisitQueryResponseCareTeamOrganizationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[VisitQueryResponseCareTeamOrganizationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: VisitQueryResponseCareTeamOrganizationType = Field(None, alias="Type")


class VisitQueryResponseCareTeamOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseCareTeamOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseCareTeamOrganizationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseCareTeamOrganizationType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseCareTeamOrganizationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamOrganizationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseCareTeamTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseCareTeamTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeDiagnosis(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseDischargeDiagnosisAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseDischargeDiagnosisComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseDischargeDiagnosisStatus = Field(None, alias="Status")


class VisitQueryResponseDischargeDiagnosisAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeDiagnosisComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseDischargeDiagnosisStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedication(RedoxAbstractModel):
    Dose_: VisitQueryResponseDischargeMedicationDose = Field(None, alias="Dose")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    FreeTextSig_: Union[str, None] = Field(None, alias="FreeTextSig")
    Frequency_: VisitQueryResponseDischargeMedicationFrequency = Field(
        None, alias="Frequency"
    )
    Indications_: List[VisitQueryResponseDischargeMedicationIndication] = Field(
        None, alias="Indications"
    )
    IsPRN_: Union[bool, None] = Field(None, alias="IsPRN")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Prescription_: Union[bool, None] = Field(None, alias="Prescription")
    Product_: VisitQueryResponseDischargeMedicationProduct = Field(
        None, alias="Product"
    )
    Rate_: VisitQueryResponseDischargeMedicationRate = Field(None, alias="Rate")
    Route_: VisitQueryResponseDischargeMedicationRoute = Field(None, alias="Route")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")
    SupplyOrder_: VisitQueryResponseDischargeMedicationSupplyOrder = Field(
        None, alias="SupplyOrder"
    )


class VisitQueryResponseDischargeMedicationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseDischargeMedicationFrequency(RedoxAbstractModel):
    EventCode_: Union[str, None] = Field(None, alias="EventCode")
    InstitutionSpecified_: Union[bool, None] = Field(None, alias="InstitutionSpecified")
    Period_: Union[str, None] = Field(None, alias="Period")
    PeriodMax_: Union[str, None] = Field(None, alias="PeriodMax")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class VisitQueryResponseDischargeMedicationIndication(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseDischargeMedicationIndicationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationIndicationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationProduct(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseDischargeMedicationProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseDischargeMedicationRoute(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseDischargeMedicationRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseDischargeMedicationSupplyOrder(RedoxAbstractModel):
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Diagnosis_: List[VisitQueryResponseEncounterDiagnosis] = Field(
        None, alias="Diagnosis"
    )
    DischargeDisposition_: VisitQueryResponseEncounterDischargeDisposition = Field(
        None, alias="DischargeDisposition"
    )
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[VisitQueryResponseEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Locations_: List[VisitQueryResponseEncounterLocation] = Field(
        None, alias="Locations"
    )
    Providers_: List[VisitQueryResponseEncounterProvider] = Field(
        None, alias="Providers"
    )
    ReasonForVisit_: List[VisitQueryResponseEncounterReasonForVisit] = Field(
        None, alias="ReasonForVisit"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: VisitQueryResponseEncounterType = Field(None, alias="Type")


class VisitQueryResponseEncounterDiagnosis(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterDiagnosisAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseEncounterDiagnosisComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseEncounterDiagnosisStatus = Field(None, alias="Status")


class VisitQueryResponseEncounterDiagnosisAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterDiagnosisComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseEncounterDiagnosisStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterDischargeDisposition(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterDischargeDispositionAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterDischargeDispositionAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseEncounterLocation(RedoxAbstractModel):
    Address_: VisitQueryResponseEncounterLocationAddress = Field(None, alias="Address")
    Identifiers_: List[VisitQueryResponseEncounterLocationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[VisitQueryResponseEncounterLocationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: VisitQueryResponseEncounterLocationType = Field(None, alias="Type")


class VisitQueryResponseEncounterLocationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseEncounterLocationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseEncounterLocationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseEncounterLocationType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterLocationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterLocationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterProvider(RedoxAbstractModel):
    Address_: VisitQueryResponseEncounterProviderAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: VisitQueryResponseEncounterProviderLocation = Field(
        None, alias="Location"
    )
    NPI_: Union[str, None] = Field(None, alias="NPI")
    PhoneNumber_: VisitQueryResponseEncounterProviderPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Role_: VisitQueryResponseEncounterProviderRole = Field(None, alias="Role")


class VisitQueryResponseEncounterProviderAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseEncounterProviderLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        VisitQueryResponseEncounterProviderLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        VisitQueryResponseEncounterProviderLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseEncounterProviderLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseEncounterProviderLocationFacilityIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseEncounterProviderPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class VisitQueryResponseEncounterProviderRole(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterProviderRoleAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterProviderRoleAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterReasonForVisit(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterReasonForVisitAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterReasonForVisitAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFamilyHistory(RedoxAbstractModel):
    Problems_: List[VisitQueryResponseFamilyHistoryProblem] = Field(
        None, alias="Problems"
    )
    Relation_: VisitQueryResponseFamilyHistoryRelation = Field(None, alias="Relation")


class VisitQueryResponseFamilyHistoryProblem(RedoxAbstractModel):
    AgeAtOnset_: Union[str, None] = Field(None, alias="AgeAtOnset")
    AltCodes_: List[VisitQueryResponseFamilyHistoryProblemAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    IsCauseOfDeath_: Union[bool, None] = Field(None, alias="IsCauseOfDeath")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: VisitQueryResponseFamilyHistoryProblemType = Field(None, alias="Type")


class VisitQueryResponseFamilyHistoryProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFamilyHistoryProblemType(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFamilyHistoryRelation(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Demographics_: VisitQueryResponseFamilyHistoryRelationDemographics = Field(
        None, alias="Demographics"
    )
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFamilyHistoryRelationDemographics(RedoxAbstractModel):
    DOB_: Union[str, None] = Field(None, alias="DOB")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class VisitQueryResponseFunctionalStatus(RedoxAbstractModel):
    Observations_: List[VisitQueryResponseFunctionalStatusObservation] = Field(
        None, alias="Observations"
    )
    Supplies_: List[VisitQueryResponseFunctionalStatusSupply] = Field(
        None, alias="Supplies"
    )


class VisitQueryResponseFunctionalStatusObservation(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseFunctionalStatusObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: VisitQueryResponseFunctionalStatusObservationCodedValue = Field(
        None, alias="CodedValue"
    )
    Comments_: List[VisitQueryResponseFunctionalStatusObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    ReferenceRange_: VisitQueryResponseFunctionalStatusObservationReferenceRange = (
        Field(None, alias="ReferenceRange")
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseFunctionalStatusObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFunctionalStatusObservationCodedValue(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponseFunctionalStatusObservationCodedValueAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFunctionalStatusObservationCodedValueAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseFunctionalStatusObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseFunctionalStatusObservationReferenceRange(RedoxAbstractModel):
    High_: Union[float, None] = Field(None, alias="High")
    Low_: Union[float, None] = Field(None, alias="Low")
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseFunctionalStatusSupply(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseFunctionalStatusSupplyAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponseFunctionalStatusSupplyAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoal(RedoxAbstractModel):
    AchievementStatus_: VisitQueryResponseGoalAchievementStatus = Field(
        None, alias="AchievementStatus"
    )
    AltCodes_: List[VisitQueryResponseGoalAltCode] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: VisitQueryResponseGoalCodedValue = Field(None, alias="CodedValue")
    Comments_: List[VisitQueryResponseGoalComment] = Field(None, alias="Comments")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Milestones_: List[VisitQueryResponseGoalMilestone] = Field(None, alias="Milestones")
    Name_: Union[str, None] = Field(None, alias="Name")
    Priority_: VisitQueryResponseGoalPriority = Field(None, alias="Priority")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseGoalAchievementStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalCodedValue(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseGoalCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseGoalMilestone(RedoxAbstractModel):
    AchievementStatus_: VisitQueryResponseGoalMilestoneAchievementStatus = Field(
        None, alias="AchievementStatus"
    )
    AltCodes_: List[VisitQueryResponseGoalMilestoneAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: VisitQueryResponseGoalMilestoneCodedValue = Field(
        None, alias="CodedValue"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    Priority_: VisitQueryResponseGoalMilestonePriority = Field(None, alias="Priority")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseGoalMilestoneAchievementStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalMilestoneAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalMilestoneCodedValue(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseGoalMilestoneCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalMilestoneCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalMilestonePriority(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseGoalPriority(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeader(RedoxAbstractModel):
    Document_: VisitQueryResponseHeaderDocument = Field(None, alias="Document")
    PCP_: VisitQueryResponseHeaderPCP = Field(None, alias="PCP")
    Patient_: VisitQueryResponseHeaderPatient = Field(None, alias="Patient")


class VisitQueryResponseHeaderDocument(RedoxAbstractModel):
    Author_: VisitQueryResponseHeaderDocumentAuthor = Field(None, alias="Author")
    Confidentiality_: VisitQueryResponseHeaderDocumentConfidentiality = Field(
        None, alias="Confidentiality"
    )
    Custodian_: VisitQueryResponseHeaderDocumentCustodian = Field(
        None, alias="Custodian"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    ID_: Union[str, None] = Field(None, alias="ID")
    Locale_: Union[str, None] = Field(None, alias="Locale")
    Title_: Union[str, None] = Field(None, alias="Title")
    Type_: Union[str, None] = Field(None, alias="Type")
    TypeCode_: VisitQueryResponseHeaderDocumentTypeCode = Field(None, alias="TypeCode")
    Visit_: VisitQueryResponseHeaderDocumentVisit = Field(None, alias="Visit")


class VisitQueryResponseHeaderDocumentAuthor(RedoxAbstractModel):
    Address_: VisitQueryResponseHeaderDocumentAuthorAddress = Field(
        None, alias="Address"
    )
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: VisitQueryResponseHeaderDocumentAuthorLocation = Field(
        None, alias="Location"
    )
    PhoneNumber_: VisitQueryResponseHeaderDocumentAuthorPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderDocumentAuthorAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseHeaderDocumentAuthorLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        VisitQueryResponseHeaderDocumentAuthorLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        VisitQueryResponseHeaderDocumentAuthorLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderDocumentAuthorLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderDocumentAuthorLocationFacilityIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderDocumentAuthorPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class VisitQueryResponseHeaderDocumentConfidentiality(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentCustodian(RedoxAbstractModel):
    Address_: VisitQueryResponseHeaderDocumentCustodianAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[VisitQueryResponseHeaderDocumentCustodianIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[VisitQueryResponseHeaderDocumentCustodianTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: VisitQueryResponseHeaderDocumentCustodianType = Field(None, alias="Type")


class VisitQueryResponseHeaderDocumentCustodianAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseHeaderDocumentCustodianIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderDocumentCustodianTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseHeaderDocumentCustodianType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHeaderDocumentCustodianTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentCustodianTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentTypeCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentVisit(RedoxAbstractModel):
    DischargeDisposition_: VisitQueryResponseHeaderDocumentVisitDischargeDisposition = (
        Field(None, alias="DischargeDisposition")
    )
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Location_: VisitQueryResponseHeaderDocumentVisitLocation = Field(
        None, alias="Location"
    )
    Reason_: Union[str, None] = Field(None, alias="Reason")
    StartDateTime_: Union[str, None] = Field(None, alias="StartDateTime")
    Type_: VisitQueryResponseHeaderDocumentVisitType = Field(None, alias="Type")
    VisitNumber_: Union[str, None] = Field(None, alias="VisitNumber")


class VisitQueryResponseHeaderDocumentVisitDischargeDisposition(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponseHeaderDocumentVisitDischargeDispositionAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentVisitDischargeDispositionAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentVisitLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        VisitQueryResponseHeaderDocumentVisitLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        VisitQueryResponseHeaderDocumentVisitLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderDocumentVisitLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderDocumentVisitLocationFacilityIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderDocumentVisitType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHeaderDocumentVisitTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderDocumentVisitTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderPCP(RedoxAbstractModel):
    Address_: VisitQueryResponseHeaderPCPAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: VisitQueryResponseHeaderPCPLocation = Field(None, alias="Location")
    PhoneNumber_: VisitQueryResponseHeaderPCPPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderPCPAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseHeaderPCPLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        VisitQueryResponseHeaderPCPLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        VisitQueryResponseHeaderPCPLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderPCPLocationDepartmentIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderPCPLocationFacilityIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderPCPPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class VisitQueryResponseHeaderPatient(RedoxAbstractModel):
    Demographics_: VisitQueryResponseHeaderPatientDemographics = Field(
        None, alias="Demographics"
    )
    Identifiers_: List[VisitQueryResponseHeaderPatientIdentifier] = Field(
        None, alias="Identifiers"
    )
    Organization_: VisitQueryResponseHeaderPatientOrganization = Field(
        None, alias="Organization"
    )


class VisitQueryResponseHeaderPatientDemographics(RedoxAbstractModel):
    Address_: VisitQueryResponseHeaderPatientDemographicsAddress = Field(
        None, alias="Address"
    )
    DOB_: Union[str, None] = Field(None, alias="DOB")
    DeathDateTime_: Union[str, None] = Field(None, alias="DeathDateTime")
    EmailAddresses_: List[
        VisitQueryResponseHeaderPatientDemographicsEmailAddress
    ] = Field(None, alias="EmailAddresses")
    EthnicGroupCodes_: List[
        VisitQueryResponseHeaderPatientDemographicsEthnicGroupCode
    ] = Field(None, alias="EthnicGroupCodes")
    Ethnicity_: Union[str, None] = Field(None, alias="Ethnicity")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    Language_: Union[str, None] = Field(None, alias="Language")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MaritalStatus_: Union[str, None] = Field(None, alias="MaritalStatus")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    PhoneNumber_: VisitQueryResponseHeaderPatientDemographicsPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Race_: Union[str, None] = Field(None, alias="Race")
    RaceCodes_: List[VisitQueryResponseHeaderPatientDemographicsRaceCode] = Field(
        None, alias="RaceCodes"
    )
    Religion_: Union[str, None] = Field(None, alias="Religion")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class VisitQueryResponseHeaderPatientDemographicsAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseHeaderPatientDemographicsEmailAddress(RedoxAbstractModel):
    Address_: Union[str, None] = Field(None, alias="Address")


class VisitQueryResponseHeaderPatientDemographicsEthnicGroupCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderPatientDemographicsPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")


class VisitQueryResponseHeaderPatientDemographicsRaceCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderPatientIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseHeaderPatientOrganization(RedoxAbstractModel):
    Address_: VisitQueryResponseHeaderPatientOrganizationAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[VisitQueryResponseHeaderPatientOrganizationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[VisitQueryResponseHeaderPatientOrganizationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: VisitQueryResponseHeaderPatientOrganizationType = Field(None, alias="Type")


class VisitQueryResponseHeaderPatientOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseHeaderPatientOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseHeaderPatientOrganizationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseHeaderPatientOrganizationType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHeaderPatientOrganizationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHeaderPatientOrganizationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHealthConcern(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHealthConcernAltCode] = Field(
        None, alias="AltCodes"
    )
    Category_: VisitQueryResponseHealthConcernCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseHealthConcernComment] = Field(
        None, alias="Comments"
    )
    ConcernType_: Union[str, None] = Field(None, alias="ConcernType")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: VisitQueryResponseHealthConcernTargetSite = Field(
        None, alias="TargetSite"
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseHealthConcernAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHealthConcernCategory(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHealthConcernCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHealthConcernCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHealthConcernComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseHealthConcernTargetSite(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseHealthConcernTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseHealthConcernTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseImmunization(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Dose_: VisitQueryResponseImmunizationDose = Field(None, alias="Dose")
    Product_: VisitQueryResponseImmunizationProduct = Field(None, alias="Product")
    Route_: VisitQueryResponseImmunizationRoute = Field(None, alias="Route")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponseImmunizationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseImmunizationProduct(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseImmunizationProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    LotNumber_: Union[str, None] = Field(None, alias="LotNumber")
    Manufacturer_: Union[str, None] = Field(None, alias="Manufacturer")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseImmunizationProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseImmunizationRoute(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseImmunizationRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseImmunizationRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseInstruction(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseInstructionAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseInstructionAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseInsurance(RedoxAbstractModel):
    AgreementType_: Union[str, None] = Field(None, alias="AgreementType")
    Company_: VisitQueryResponseInsuranceCompany = Field(None, alias="Company")
    CoverageType_: Union[str, None] = Field(None, alias="CoverageType")
    EffectiveDate_: Union[str, None] = Field(None, alias="EffectiveDate")
    ExpirationDate_: Union[str, None] = Field(None, alias="ExpirationDate")
    GroupName_: Union[str, None] = Field(None, alias="GroupName")
    GroupNumber_: Union[str, None] = Field(None, alias="GroupNumber")
    Insured_: VisitQueryResponseInsuranceInsured = Field(None, alias="Insured")
    MemberNumber_: Union[str, None] = Field(None, alias="MemberNumber")
    Plan_: VisitQueryResponseInsurancePlan = Field(None, alias="Plan")
    PolicyNumber_: Union[str, None] = Field(None, alias="PolicyNumber")
    Priority_: Union[str, None] = Field(None, alias="Priority")


class VisitQueryResponseInsuranceCompany(RedoxAbstractModel):
    Address_: VisitQueryResponseInsuranceCompanyAddress = Field(None, alias="Address")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")
    PhoneNumber_: Union[str, None] = Field(None, alias="PhoneNumber")


class VisitQueryResponseInsuranceCompanyAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseInsuranceInsured(RedoxAbstractModel):
    Address_: VisitQueryResponseInsuranceInsuredAddress = Field(None, alias="Address")
    DOB_: Union[str, None] = Field(None, alias="DOB")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    Identifiers_: List[VisitQueryResponseInsuranceInsuredIdentifier] = Field(
        None, alias="Identifiers"
    )
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    Relationship_: Union[str, None] = Field(None, alias="Relationship")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class VisitQueryResponseInsuranceInsuredAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseInsuranceInsuredIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseInsurancePlan(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: Union[str, None] = Field(None, alias="Type")


class VisitQueryResponseMedicalEquipment(RedoxAbstractModel):
    Comments_: List[VisitQueryResponseMedicalEquipmentComment] = Field(
        None, alias="Comments"
    )
    Procedure_: VisitQueryResponseMedicalEquipmentProcedure = Field(
        None, alias="Procedure"
    )
    Product_: VisitQueryResponseMedicalEquipmentProduct = Field(None, alias="Product")
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponseMedicalEquipmentComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseMedicalEquipmentProcedure(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicalEquipmentProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")
    TargetSite_: VisitQueryResponseMedicalEquipmentProcedureTargetSite = Field(
        None, alias="TargetSite"
    )


class VisitQueryResponseMedicalEquipmentProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProcedureTargetSite(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponseMedicalEquipmentProcedureTargetSiteAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProcedureTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProduct(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicalEquipmentProductAltCode] = Field(
        None, alias="AltCodes"
    )
    BrandName_: Union[str, None] = Field(None, alias="BrandName")
    CatalogNumber_: Union[str, None] = Field(None, alias="CatalogNumber")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DeviceID_: Union[str, None] = Field(None, alias="DeviceID")
    DistinctID_: Union[str, None] = Field(None, alias="DistinctID")
    ExpirationDate_: Union[str, None] = Field(None, alias="ExpirationDate")
    Identifiers_: List[VisitQueryResponseMedicalEquipmentProductIdentifier] = Field(
        None, alias="Identifiers"
    )
    Issuer_: Union[str, None] = Field(None, alias="Issuer")
    LotNumber_: Union[str, None] = Field(None, alias="LotNumber")
    ManufactureDate_: Union[str, None] = Field(None, alias="ManufactureDate")
    ManufacturerName_: Union[str, None] = Field(None, alias="ManufacturerName")
    ModelNumber_: Union[str, None] = Field(None, alias="ModelNumber")
    Name_: Union[str, None] = Field(None, alias="Name")
    SafetyObservations_: List[
        VisitQueryResponseMedicalEquipmentProductSafetyObservation
    ] = Field(None, alias="SafetyObservations")
    SerialNumber_: Union[str, None] = Field(None, alias="SerialNumber")
    Status_: VisitQueryResponseMedicalEquipmentProductStatus = Field(
        None, alias="Status"
    )


class VisitQueryResponseMedicalEquipmentProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProductIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseMedicalEquipmentProductSafetyObservation(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponseMedicalEquipmentProductSafetyObservationAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProductSafetyObservationAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicalEquipmentProductStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedication(RedoxAbstractModel):
    Dose_: VisitQueryResponseMedicationDose = Field(None, alias="Dose")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    FreeTextSig_: Union[str, None] = Field(None, alias="FreeTextSig")
    Frequency_: VisitQueryResponseMedicationFrequency = Field(None, alias="Frequency")
    Indications_: List[VisitQueryResponseMedicationIndication] = Field(
        None, alias="Indications"
    )
    IsPRN_: Union[bool, None] = Field(None, alias="IsPRN")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Prescription_: Union[bool, None] = Field(None, alias="Prescription")
    Product_: VisitQueryResponseMedicationProduct = Field(None, alias="Product")
    Rate_: VisitQueryResponseMedicationRate = Field(None, alias="Rate")
    Route_: VisitQueryResponseMedicationRoute = Field(None, alias="Route")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")
    SupplyOrder_: VisitQueryResponseMedicationSupplyOrder = Field(
        None, alias="SupplyOrder"
    )


class VisitQueryResponseMedicationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseMedicationFrequency(RedoxAbstractModel):
    EventCode_: Union[str, None] = Field(None, alias="EventCode")
    InstitutionSpecified_: Union[bool, None] = Field(None, alias="InstitutionSpecified")
    Period_: Union[str, None] = Field(None, alias="Period")
    PeriodMax_: Union[str, None] = Field(None, alias="PeriodMax")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class VisitQueryResponseMedicationIndication(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicationIndicationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationIndicationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationProduct(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicationProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseMedicationRoute(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicationRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationSupplyOrder(RedoxAbstractModel):
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseMedicationsAdministered(RedoxAbstractModel):
    Dose_: VisitQueryResponseMedicationsAdministeredDose = Field(None, alias="Dose")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Frequency_: VisitQueryResponseMedicationsAdministeredFrequency = Field(
        None, alias="Frequency"
    )
    Product_: VisitQueryResponseMedicationsAdministeredProduct = Field(
        None, alias="Product"
    )
    Rate_: VisitQueryResponseMedicationsAdministeredRate = Field(None, alias="Rate")
    ReasonNotGiven_: Union[str, None] = Field(None, alias="ReasonNotGiven")
    Route_: VisitQueryResponseMedicationsAdministeredRoute = Field(None, alias="Route")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class VisitQueryResponseMedicationsAdministeredDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseMedicationsAdministeredFrequency(RedoxAbstractModel):
    Period_: Union[str, None] = Field(None, alias="Period")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class VisitQueryResponseMedicationsAdministeredProduct(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicationsAdministeredProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationsAdministeredProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationsAdministeredRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponseMedicationsAdministeredRoute(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseMedicationsAdministeredRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMedicationsAdministeredRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[VisitQueryResponseMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[VisitQueryResponseMetaLog] = Field(None, alias="Logs")
    Message_: VisitQueryResponseMetaMessage = Field(None, alias="Message")
    Source_: VisitQueryResponseMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: VisitQueryResponseMetaTransmission = Field(
        None, alias="Transmission"
    )


class VisitQueryResponseMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class VisitQueryResponseMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class VisitQueryResponseMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class VisitQueryResponsePlanOfCare(RedoxAbstractModel):
    Encounters_: List[VisitQueryResponsePlanOfCareEncounter] = Field(
        None, alias="Encounters"
    )
    MedicationAdministration_: List[
        VisitQueryResponsePlanOfCareMedicationAdministration
    ] = Field(None, alias="MedicationAdministration")
    Orders_: List[VisitQueryResponsePlanOfCareOrder] = Field(None, alias="Orders")
    Procedures_: List[VisitQueryResponsePlanOfCareProcedure] = Field(
        None, alias="Procedures"
    )
    Services_: List[VisitQueryResponsePlanOfCareService] = Field(None, alias="Services")
    Supplies_: List[VisitQueryResponsePlanOfCareSupply] = Field(None, alias="Supplies")


class VisitQueryResponsePlanOfCareEncounter(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponsePlanOfCareEncounterAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Identifiers_: List[VisitQueryResponsePlanOfCareEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareEncounterAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponsePlanOfCareMedicationAdministration(RedoxAbstractModel):
    Dose_: VisitQueryResponsePlanOfCareMedicationAdministrationDose = Field(
        None, alias="Dose"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Frequency_: VisitQueryResponsePlanOfCareMedicationAdministrationFrequency = Field(
        None, alias="Frequency"
    )
    Product_: VisitQueryResponsePlanOfCareMedicationAdministrationProduct = Field(
        None, alias="Product"
    )
    Rate_: VisitQueryResponsePlanOfCareMedicationAdministrationRate = Field(
        None, alias="Rate"
    )
    Route_: VisitQueryResponsePlanOfCareMedicationAdministrationRoute = Field(
        None, alias="Route"
    )
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareMedicationAdministrationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponsePlanOfCareMedicationAdministrationFrequency(RedoxAbstractModel):
    Period_: Union[str, None] = Field(None, alias="Period")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class VisitQueryResponsePlanOfCareMedicationAdministrationProduct(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponsePlanOfCareMedicationAdministrationProductAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareMedicationAdministrationProductAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareMedicationAdministrationRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class VisitQueryResponsePlanOfCareMedicationAdministrationRoute(RedoxAbstractModel):
    AltCodes_: List[
        VisitQueryResponsePlanOfCareMedicationAdministrationRouteAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareMedicationAdministrationRouteAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareOrder(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponsePlanOfCareOrderAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareOrderAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareProcedure(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponsePlanOfCareProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareService(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponsePlanOfCareServiceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareServiceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponsePlanOfCareSupply(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponsePlanOfCareSupplyAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponsePlanOfCareSupplyAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblem(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProblemAltCode] = Field(None, alias="AltCodes")
    Category_: VisitQueryResponseProblemCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[VisitQueryResponseProblemComment] = Field(None, alias="Comments")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    HealthStatus_: VisitQueryResponseProblemHealthStatus = Field(
        None, alias="HealthStatus"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseProblemStatus = Field(None, alias="Status")


class VisitQueryResponseProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblemCategory(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProblemCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblemCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblemComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseProblemHealthStatus(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProblemHealthStatusAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblemHealthStatusAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProblemStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProcedures(RedoxAbstractModel):
    Observations_: List[VisitQueryResponseProceduresObservation] = Field(
        None, alias="Observations"
    )
    Procedures_: List[VisitQueryResponseProceduresProcedure] = Field(
        None, alias="Procedures"
    )
    Services_: List[VisitQueryResponseProceduresService] = Field(None, alias="Services")


class VisitQueryResponseProceduresObservation(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProceduresObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseProceduresObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: VisitQueryResponseProceduresObservationTargetSite = Field(
        None, alias="TargetSite"
    )


class VisitQueryResponseProceduresObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseProceduresObservationTargetSite(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProceduresObservationTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresObservationTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresProcedure(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProceduresProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseProceduresProcedureComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: VisitQueryResponseProceduresProcedureTargetSite = Field(
        None, alias="TargetSite"
    )


class VisitQueryResponseProceduresProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresProcedureComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseProceduresProcedureTargetSite(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProceduresProcedureTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresProcedureTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresService(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseProceduresServiceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseProceduresServiceComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponseProceduresServiceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseProceduresServiceComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseReasonForVisit(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseReasonForVisitAltCode] = Field(
        None, alias="AltCodes"
    )
    Category_: VisitQueryResponseReasonForVisitCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseReasonForVisitAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseReasonForVisitCategory(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseReasonForVisitCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseReasonForVisitCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResolvedProblem(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResolvedProblemAltCode] = Field(
        None, alias="AltCodes"
    )
    Category_: VisitQueryResponseResolvedProblemCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[VisitQueryResponseResolvedProblemComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: VisitQueryResponseResolvedProblemStatus = Field(None, alias="Status")


class VisitQueryResponseResolvedProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResolvedProblemCategory(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResolvedProblemCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResolvedProblemCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResolvedProblemComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseResolvedProblemStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResult(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResultAltCode] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Encounter_: VisitQueryResponseResultEncounter = Field(None, alias="Encounter")
    Name_: Union[str, None] = Field(None, alias="Name")
    Observations_: List[VisitQueryResponseResultObservation] = Field(
        None, alias="Observations"
    )
    Producer_: VisitQueryResponseResultProducer = Field(None, alias="Producer")
    Specimen_: VisitQueryResponseResultSpecimen = Field(None, alias="Specimen")
    Status_: Union[str, None] = Field(None, alias="Status")


class VisitQueryResponseResultAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[VisitQueryResponseResultEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: VisitQueryResponseResultEncounterType = Field(None, alias="Type")


class VisitQueryResponseResultEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class VisitQueryResponseResultEncounterType(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResultEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultObservation(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResultObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: VisitQueryResponseResultObservationCodedValue = Field(
        None, alias="CodedValue"
    )
    Comments_: List[VisitQueryResponseResultObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    ReferenceRange_: VisitQueryResponseResultObservationReferenceRange = Field(
        None, alias="ReferenceRange"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")
    ValueType_: Union[str, None] = Field(None, alias="ValueType")


class VisitQueryResponseResultObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultObservationCodedValue(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseResultObservationCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultObservationCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseResultObservationReferenceRange(RedoxAbstractModel):
    High_: Union[str, None] = Field(None, alias="High")
    Low_: Union[str, None] = Field(None, alias="Low")
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseResultProducer(RedoxAbstractModel):
    Address_: VisitQueryResponseResultProducerAddress = Field(None, alias="Address")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultProducerAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class VisitQueryResponseResultSpecimen(RedoxAbstractModel):
    CollectionDateTime_: Union[str, None] = Field(None, alias="CollectionDateTime")
    Identifiers_: List[str] = Field(None, alias="Identifiers")
    Source_: VisitQueryResponseResultSpecimenSource = Field(None, alias="Source")
    TargetSite_: VisitQueryResponseResultSpecimenTargetSite = Field(
        None, alias="TargetSite"
    )


class VisitQueryResponseResultSpecimenSource(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseResultSpecimenTargetSite(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseSocialHistory(RedoxAbstractModel):
    Observations_: List[VisitQueryResponseSocialHistoryObservation] = Field(
        None, alias="Observations"
    )
    Pregnancy_: List[VisitQueryResponseSocialHistoryPregnancy] = Field(
        None, alias="Pregnancy"
    )
    TobaccoUse_: List[VisitQueryResponseSocialHistoryTobaccoUse] = Field(
        None, alias="TobaccoUse"
    )


class VisitQueryResponseSocialHistoryObservation(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseSocialHistoryObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseSocialHistoryObservationComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: VisitQueryResponseSocialHistoryObservationValue = Field(None, alias="Value")
    ValueText_: Union[str, None] = Field(None, alias="ValueText")


class VisitQueryResponseSocialHistoryObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseSocialHistoryObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseSocialHistoryObservationValue(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseSocialHistoryObservationValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseSocialHistoryObservationValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseSocialHistoryPregnancy(RedoxAbstractModel):
    Comments_: List[VisitQueryResponseSocialHistoryPregnancyComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    EstimatedDelivery_: Union[str, None] = Field(None, alias="EstimatedDelivery")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class VisitQueryResponseSocialHistoryPregnancyComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseSocialHistoryTobaccoUse(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseSocialHistoryTobaccoUseAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseSocialHistoryTobaccoUseComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsSmokingStatus_: Union[bool, None] = Field(None, alias="IsSmokingStatus")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class VisitQueryResponseSocialHistoryTobaccoUseAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseSocialHistoryTobaccoUseComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseVitalSign(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Observations_: List[VisitQueryResponseVitalSignObservation] = Field(
        None, alias="Observations"
    )


class VisitQueryResponseVitalSignObservation(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseVitalSignObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[VisitQueryResponseVitalSignObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: VisitQueryResponseVitalSignObservationTargetSite = Field(
        None, alias="TargetSite"
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class VisitQueryResponseVitalSignObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseVitalSignObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class VisitQueryResponseVitalSignObservationTargetSite(RedoxAbstractModel):
    AltCodes_: List[VisitQueryResponseVitalSignObservationTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class VisitQueryResponseVitalSignObservationTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


VisitQueryResponse.model_rebuild()
VisitQueryResponseAdmissionDiagnosis.model_rebuild()
VisitQueryResponseAdvanceDirective.model_rebuild()
VisitQueryResponseAdvanceDirectiveCustodian.model_rebuild()
VisitQueryResponseAdvanceDirectiveType.model_rebuild()
VisitQueryResponseAllergy.model_rebuild()
VisitQueryResponseAllergyReaction.model_rebuild()
VisitQueryResponseAllergySubstance.model_rebuild()
VisitQueryResponseAllergyType.model_rebuild()
VisitQueryResponseAssessment.model_rebuild()
VisitQueryResponseAssessmentDiagnosis.model_rebuild()
VisitQueryResponseCareTeam.model_rebuild()
VisitQueryResponseCareTeamEncounter.model_rebuild()
VisitQueryResponseCareTeamEncounterType.model_rebuild()
VisitQueryResponseCareTeamMember.model_rebuild()
VisitQueryResponseCareTeamMemberRole.model_rebuild()
VisitQueryResponseCareTeamOrganization.model_rebuild()
VisitQueryResponseCareTeamOrganizationType.model_rebuild()
VisitQueryResponseCareTeamType.model_rebuild()
VisitQueryResponseDischargeDiagnosis.model_rebuild()
VisitQueryResponseDischargeMedication.model_rebuild()
VisitQueryResponseDischargeMedicationIndication.model_rebuild()
VisitQueryResponseDischargeMedicationProduct.model_rebuild()
VisitQueryResponseDischargeMedicationRoute.model_rebuild()
VisitQueryResponseEncounter.model_rebuild()
VisitQueryResponseEncounterDiagnosis.model_rebuild()
VisitQueryResponseEncounterDischargeDisposition.model_rebuild()
VisitQueryResponseEncounterLocation.model_rebuild()
VisitQueryResponseEncounterLocationType.model_rebuild()
VisitQueryResponseEncounterProvider.model_rebuild()
VisitQueryResponseEncounterProviderLocation.model_rebuild()
VisitQueryResponseEncounterProviderRole.model_rebuild()
VisitQueryResponseEncounterReasonForVisit.model_rebuild()
VisitQueryResponseEncounterType.model_rebuild()
VisitQueryResponseFamilyHistory.model_rebuild()
VisitQueryResponseFamilyHistoryProblem.model_rebuild()
VisitQueryResponseFamilyHistoryRelation.model_rebuild()
VisitQueryResponseFunctionalStatus.model_rebuild()
VisitQueryResponseFunctionalStatusObservation.model_rebuild()
VisitQueryResponseFunctionalStatusObservationCodedValue.model_rebuild()
VisitQueryResponseFunctionalStatusSupply.model_rebuild()
VisitQueryResponseGoal.model_rebuild()
VisitQueryResponseGoalCodedValue.model_rebuild()
VisitQueryResponseGoalMilestone.model_rebuild()
VisitQueryResponseGoalMilestoneCodedValue.model_rebuild()
VisitQueryResponseHeader.model_rebuild()
VisitQueryResponseHeaderDocument.model_rebuild()
VisitQueryResponseHeaderDocumentAuthor.model_rebuild()
VisitQueryResponseHeaderDocumentAuthorLocation.model_rebuild()
VisitQueryResponseHeaderDocumentCustodian.model_rebuild()
VisitQueryResponseHeaderDocumentCustodianType.model_rebuild()
VisitQueryResponseHeaderDocumentVisit.model_rebuild()
VisitQueryResponseHeaderDocumentVisitDischargeDisposition.model_rebuild()
VisitQueryResponseHeaderDocumentVisitLocation.model_rebuild()
VisitQueryResponseHeaderDocumentVisitType.model_rebuild()
VisitQueryResponseHeaderPatient.model_rebuild()
VisitQueryResponseHeaderPatientDemographics.model_rebuild()
VisitQueryResponseHeaderPatientOrganization.model_rebuild()
VisitQueryResponseHeaderPatientOrganizationType.model_rebuild()
VisitQueryResponseHeaderPCP.model_rebuild()
VisitQueryResponseHeaderPCPLocation.model_rebuild()
VisitQueryResponseHealthConcern.model_rebuild()
VisitQueryResponseHealthConcernCategory.model_rebuild()
VisitQueryResponseHealthConcernTargetSite.model_rebuild()
VisitQueryResponseImmunization.model_rebuild()
VisitQueryResponseImmunizationProduct.model_rebuild()
VisitQueryResponseImmunizationRoute.model_rebuild()
VisitQueryResponseInstruction.model_rebuild()
VisitQueryResponseInsurance.model_rebuild()
VisitQueryResponseInsuranceCompany.model_rebuild()
VisitQueryResponseInsuranceInsured.model_rebuild()
VisitQueryResponseMedicalEquipment.model_rebuild()
VisitQueryResponseMedicalEquipmentProcedure.model_rebuild()
VisitQueryResponseMedicalEquipmentProcedureTargetSite.model_rebuild()
VisitQueryResponseMedicalEquipmentProduct.model_rebuild()
VisitQueryResponseMedicalEquipmentProductSafetyObservation.model_rebuild()
VisitQueryResponseMedication.model_rebuild()
VisitQueryResponseMedicationIndication.model_rebuild()
VisitQueryResponseMedicationProduct.model_rebuild()
VisitQueryResponseMedicationRoute.model_rebuild()
VisitQueryResponseMedicationsAdministered.model_rebuild()
VisitQueryResponseMedicationsAdministeredProduct.model_rebuild()
VisitQueryResponseMedicationsAdministeredRoute.model_rebuild()
VisitQueryResponseMeta.model_rebuild()
VisitQueryResponsePlanOfCare.model_rebuild()
VisitQueryResponsePlanOfCareEncounter.model_rebuild()
VisitQueryResponsePlanOfCareMedicationAdministration.model_rebuild()
VisitQueryResponsePlanOfCareMedicationAdministrationProduct.model_rebuild()
VisitQueryResponsePlanOfCareMedicationAdministrationRoute.model_rebuild()
VisitQueryResponsePlanOfCareOrder.model_rebuild()
VisitQueryResponsePlanOfCareProcedure.model_rebuild()
VisitQueryResponsePlanOfCareService.model_rebuild()
VisitQueryResponsePlanOfCareSupply.model_rebuild()
VisitQueryResponseProblem.model_rebuild()
VisitQueryResponseProblemCategory.model_rebuild()
VisitQueryResponseProblemHealthStatus.model_rebuild()
VisitQueryResponseProcedures.model_rebuild()
VisitQueryResponseProceduresObservation.model_rebuild()
VisitQueryResponseProceduresObservationTargetSite.model_rebuild()
VisitQueryResponseProceduresProcedure.model_rebuild()
VisitQueryResponseProceduresProcedureTargetSite.model_rebuild()
VisitQueryResponseProceduresService.model_rebuild()
VisitQueryResponseReasonForVisit.model_rebuild()
VisitQueryResponseReasonForVisitCategory.model_rebuild()
VisitQueryResponseResolvedProblem.model_rebuild()
VisitQueryResponseResolvedProblemCategory.model_rebuild()
VisitQueryResponseResult.model_rebuild()
VisitQueryResponseResultEncounter.model_rebuild()
VisitQueryResponseResultEncounterType.model_rebuild()
VisitQueryResponseResultObservation.model_rebuild()
VisitQueryResponseResultObservationCodedValue.model_rebuild()
VisitQueryResponseResultProducer.model_rebuild()
VisitQueryResponseResultSpecimen.model_rebuild()
VisitQueryResponseSocialHistory.model_rebuild()
VisitQueryResponseSocialHistoryObservation.model_rebuild()
VisitQueryResponseSocialHistoryObservationValue.model_rebuild()
VisitQueryResponseSocialHistoryPregnancy.model_rebuild()
VisitQueryResponseSocialHistoryTobaccoUse.model_rebuild()
VisitQueryResponseVitalSign.model_rebuild()
VisitQueryResponseVitalSignObservation.model_rebuild()
VisitQueryResponseVitalSignObservationTargetSite.model_rebuild()
