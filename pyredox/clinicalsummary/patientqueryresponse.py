# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class PatientQueryResponse(EventTypeAbstractModel):
    AdvanceDirectives_: List[PatientQueryResponseAdvanceDirective] = Field(
        None, alias="AdvanceDirectives"
    )
    AdvanceDirectivesText_: Union[str, None] = Field(
        None, alias="AdvanceDirectivesText"
    )
    Allergies_: List[PatientQueryResponseAllergy] = Field(None, alias="Allergies")
    AllergyText_: Union[str, None] = Field(None, alias="AllergyText")
    CareTeams_: List[PatientQueryResponseCareTeam] = Field(None, alias="CareTeams")
    Encounters_: List[PatientQueryResponseEncounter] = Field(None, alias="Encounters")
    EncountersText_: Union[str, None] = Field(None, alias="EncountersText")
    FamilyHistory_: List[PatientQueryResponseFamilyHistory] = Field(
        None, alias="FamilyHistory"
    )
    FamilyHistoryText_: Union[str, None] = Field(None, alias="FamilyHistoryText")
    FunctionalStatus_: PatientQueryResponseFunctionalStatus = Field(
        None, alias="FunctionalStatus"
    )
    FunctionalStatusText_: Union[str, None] = Field(None, alias="FunctionalStatusText")
    Goals_: List[PatientQueryResponseGoal] = Field(None, alias="Goals")
    GoalsText_: Union[str, None] = Field(None, alias="GoalsText")
    Header_: PatientQueryResponseHeader = Field(None, alias="Header")
    HealthConcerns_: List[PatientQueryResponseHealthConcern] = Field(
        None, alias="HealthConcerns"
    )
    HealthConcernsText_: Union[str, None] = Field(None, alias="HealthConcernsText")
    ImmunizationText_: Union[str, None] = Field(None, alias="ImmunizationText")
    Immunizations_: List[PatientQueryResponseImmunization] = Field(
        None, alias="Immunizations"
    )
    Insurances_: List[PatientQueryResponseInsurance] = Field(None, alias="Insurances")
    InsurancesText_: Union[str, None] = Field(None, alias="InsurancesText")
    MedicalEquipment_: List[PatientQueryResponseMedicalEquipment] = Field(
        None, alias="MedicalEquipment"
    )
    MedicalEquipmentText_: Union[str, None] = Field(None, alias="MedicalEquipmentText")
    Medications_: List[PatientQueryResponseMedication] = Field(
        None, alias="Medications"
    )
    MedicationsText_: Union[str, None] = Field(None, alias="MedicationsText")
    Meta_: PatientQueryResponseMeta = Field(..., alias="Meta")
    PlanOfCare_: PatientQueryResponsePlanOfCare = Field(None, alias="PlanOfCare")
    PlanOfCareText_: Union[str, None] = Field(None, alias="PlanOfCareText")
    Problems_: List[PatientQueryResponseProblem] = Field(None, alias="Problems")
    ProblemsText_: Union[str, None] = Field(None, alias="ProblemsText")
    Procedures_: PatientQueryResponseProcedures = Field(None, alias="Procedures")
    ProceduresText_: Union[str, None] = Field(None, alias="ProceduresText")
    ResolvedProblems_: List[PatientQueryResponseResolvedProblem] = Field(
        None, alias="ResolvedProblems"
    )
    ResolvedProblemsText_: Union[str, None] = Field(None, alias="ResolvedProblemsText")
    ResultText_: Union[str, None] = Field(None, alias="ResultText")
    Results_: List[PatientQueryResponseResult] = Field(None, alias="Results")
    SocialHistory_: PatientQueryResponseSocialHistory = Field(
        None, alias="SocialHistory"
    )
    SocialHistoryText_: Union[str, None] = Field(None, alias="SocialHistoryText")
    VitalSigns_: List[PatientQueryResponseVitalSign] = Field(None, alias="VitalSigns")
    VitalSignsText_: Union[str, None] = Field(None, alias="VitalSignsText")


class PatientQueryResponseAdvanceDirective(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseAdvanceDirectiveAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Custodians_: List[PatientQueryResponseAdvanceDirectiveCustodian] = Field(
        None, alias="Custodians"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    ExternalReference_: Union[str, None] = Field(None, alias="ExternalReference")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Type_: PatientQueryResponseAdvanceDirectiveType = Field(None, alias="Type")
    VerifiedBy_: List[PatientQueryResponseAdvanceDirectiveVerifiedBy] = Field(
        None, alias="VerifiedBy"
    )


class PatientQueryResponseAdvanceDirectiveAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAdvanceDirectiveCustodian(RedoxAbstractModel):
    Address_: PatientQueryResponseAdvanceDirectiveCustodianAddress = Field(
        None, alias="Address"
    )
    Credentials_: Union[str, None] = Field(None, alias="Credentials")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    LastName_: Union[str, None] = Field(None, alias="LastName")


class PatientQueryResponseAdvanceDirectiveCustodianAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseAdvanceDirectiveType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseAdvanceDirectiveTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAdvanceDirectiveTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAdvanceDirectiveVerifiedBy(RedoxAbstractModel):
    Credentials_: Union[str, None] = Field(None, alias="Credentials")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    LastName_: Union[str, None] = Field(None, alias="LastName")


class PatientQueryResponseAllergy(RedoxAbstractModel):
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[PatientQueryResponseAllergyComment] = Field(None, alias="Comments")
    Criticality_: PatientQueryResponseAllergyCriticality = Field(
        None, alias="Criticality"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Reaction_: List[PatientQueryResponseAllergyReaction] = Field(None, alias="Reaction")
    Severity_: PatientQueryResponseAllergySeverity = Field(None, alias="Severity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: PatientQueryResponseAllergyStatus = Field(None, alias="Status")
    Substance_: PatientQueryResponseAllergySubstance = Field(None, alias="Substance")
    Type_: PatientQueryResponseAllergyType = Field(None, alias="Type")


class PatientQueryResponseAllergyComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseAllergyCriticality(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergyReaction(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseAllergyReactionAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")
    Severity_: PatientQueryResponseAllergyReactionSeverity = Field(
        None, alias="Severity"
    )
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseAllergyReactionAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergyReactionSeverity(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergySeverity(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergyStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergySubstance(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseAllergySubstanceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergySubstanceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergyType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseAllergyTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseAllergyTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeam(RedoxAbstractModel):
    Encounter_: PatientQueryResponseCareTeamEncounter = Field(None, alias="Encounter")
    Members_: List[PatientQueryResponseCareTeamMember] = Field(None, alias="Members")
    Name_: Union[str, None] = Field(None, alias="Name")
    Organization_: PatientQueryResponseCareTeamOrganization = Field(
        None, alias="Organization"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Types_: List[PatientQueryResponseCareTeamType] = Field(None, alias="Types")


class PatientQueryResponseCareTeamEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[PatientQueryResponseCareTeamEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: PatientQueryResponseCareTeamEncounterType = Field(None, alias="Type")


class PatientQueryResponseCareTeamEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseCareTeamEncounterType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseCareTeamEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamMember(RedoxAbstractModel):
    Address_: PatientQueryResponseCareTeamMemberAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    Identifiers_: List[PatientQueryResponseCareTeamMemberIdentifier] = Field(
        None, alias="Identifiers"
    )
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    Roles_: List[PatientQueryResponseCareTeamMemberRole] = Field(None, alias="Roles")
    StartDateTime_: Union[str, None] = Field(None, alias="StartDateTime")
    Telecom_: List[PatientQueryResponseCareTeamMemberTelecom] = Field(
        None, alias="Telecom"
    )


class PatientQueryResponseCareTeamMemberAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseCareTeamMemberIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseCareTeamMemberRole(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseCareTeamMemberRoleAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamMemberRoleAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamMemberTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseCareTeamOrganization(RedoxAbstractModel):
    Address_: PatientQueryResponseCareTeamOrganizationAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[PatientQueryResponseCareTeamOrganizationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[PatientQueryResponseCareTeamOrganizationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: PatientQueryResponseCareTeamOrganizationType = Field(None, alias="Type")


class PatientQueryResponseCareTeamOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseCareTeamOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseCareTeamOrganizationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseCareTeamOrganizationType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseCareTeamOrganizationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamOrganizationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseCareTeamTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseCareTeamTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Diagnosis_: List[PatientQueryResponseEncounterDiagnosis] = Field(
        None, alias="Diagnosis"
    )
    DischargeDisposition_: PatientQueryResponseEncounterDischargeDisposition = Field(
        None, alias="DischargeDisposition"
    )
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[PatientQueryResponseEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Locations_: List[PatientQueryResponseEncounterLocation] = Field(
        None, alias="Locations"
    )
    Providers_: List[PatientQueryResponseEncounterProvider] = Field(
        None, alias="Providers"
    )
    ReasonForVisit_: List[PatientQueryResponseEncounterReasonForVisit] = Field(
        None, alias="ReasonForVisit"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: PatientQueryResponseEncounterType = Field(None, alias="Type")


class PatientQueryResponseEncounterDiagnosis(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterDiagnosisAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseEncounterDiagnosisComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsNegativeIndicator_: Union[bool, None] = Field(None, alias="IsNegativeIndicator")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: PatientQueryResponseEncounterDiagnosisStatus = Field(None, alias="Status")


class PatientQueryResponseEncounterDiagnosisAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterDiagnosisComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseEncounterDiagnosisStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterDischargeDisposition(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterDischargeDispositionAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterDischargeDispositionAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseEncounterLocation(RedoxAbstractModel):
    Address_: PatientQueryResponseEncounterLocationAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[PatientQueryResponseEncounterLocationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[PatientQueryResponseEncounterLocationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: PatientQueryResponseEncounterLocationType = Field(None, alias="Type")


class PatientQueryResponseEncounterLocationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseEncounterLocationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseEncounterLocationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseEncounterLocationType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterLocationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterLocationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterProvider(RedoxAbstractModel):
    Address_: PatientQueryResponseEncounterProviderAddress = Field(
        None, alias="Address"
    )
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: PatientQueryResponseEncounterProviderLocation = Field(
        None, alias="Location"
    )
    NPI_: Union[str, None] = Field(None, alias="NPI")
    PhoneNumber_: PatientQueryResponseEncounterProviderPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Role_: PatientQueryResponseEncounterProviderRole = Field(None, alias="Role")


class PatientQueryResponseEncounterProviderAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseEncounterProviderLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        PatientQueryResponseEncounterProviderLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        PatientQueryResponseEncounterProviderLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseEncounterProviderLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseEncounterProviderLocationFacilityIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseEncounterProviderPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class PatientQueryResponseEncounterProviderRole(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterProviderRoleAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterProviderRoleAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterReasonForVisit(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterReasonForVisitAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterReasonForVisitAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFamilyHistory(RedoxAbstractModel):
    Problems_: List[PatientQueryResponseFamilyHistoryProblem] = Field(
        None, alias="Problems"
    )
    Relation_: PatientQueryResponseFamilyHistoryRelation = Field(None, alias="Relation")


class PatientQueryResponseFamilyHistoryProblem(RedoxAbstractModel):
    AgeAtOnset_: Union[str, None] = Field(None, alias="AgeAtOnset")
    AltCodes_: List[PatientQueryResponseFamilyHistoryProblemAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    IsCauseOfDeath_: Union[bool, None] = Field(None, alias="IsCauseOfDeath")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: PatientQueryResponseFamilyHistoryProblemType = Field(None, alias="Type")


class PatientQueryResponseFamilyHistoryProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFamilyHistoryProblemType(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFamilyHistoryRelation(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Demographics_: PatientQueryResponseFamilyHistoryRelationDemographics = Field(
        None, alias="Demographics"
    )
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFamilyHistoryRelationDemographics(RedoxAbstractModel):
    DOB_: Union[str, None] = Field(None, alias="DOB")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class PatientQueryResponseFunctionalStatus(RedoxAbstractModel):
    Observations_: List[PatientQueryResponseFunctionalStatusObservation] = Field(
        None, alias="Observations"
    )
    Supplies_: List[PatientQueryResponseFunctionalStatusSupply] = Field(
        None, alias="Supplies"
    )


class PatientQueryResponseFunctionalStatusObservation(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseFunctionalStatusObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: PatientQueryResponseFunctionalStatusObservationCodedValue = Field(
        None, alias="CodedValue"
    )
    Comments_: List[PatientQueryResponseFunctionalStatusObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    ReferenceRange_: PatientQueryResponseFunctionalStatusObservationReferenceRange = (
        Field(None, alias="ReferenceRange")
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseFunctionalStatusObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFunctionalStatusObservationCodedValue(RedoxAbstractModel):
    AltCodes_: List[
        PatientQueryResponseFunctionalStatusObservationCodedValueAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFunctionalStatusObservationCodedValueAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseFunctionalStatusObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseFunctionalStatusObservationReferenceRange(RedoxAbstractModel):
    High_: Union[float, None] = Field(None, alias="High")
    Low_: Union[float, None] = Field(None, alias="Low")
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseFunctionalStatusSupply(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseFunctionalStatusSupplyAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponseFunctionalStatusSupplyAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoal(RedoxAbstractModel):
    AchievementStatus_: PatientQueryResponseGoalAchievementStatus = Field(
        None, alias="AchievementStatus"
    )
    AltCodes_: List[PatientQueryResponseGoalAltCode] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: PatientQueryResponseGoalCodedValue = Field(None, alias="CodedValue")
    Comments_: List[PatientQueryResponseGoalComment] = Field(None, alias="Comments")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Milestones_: List[PatientQueryResponseGoalMilestone] = Field(
        None, alias="Milestones"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Priority_: PatientQueryResponseGoalPriority = Field(None, alias="Priority")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseGoalAchievementStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalCodedValue(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseGoalCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseGoalMilestone(RedoxAbstractModel):
    AchievementStatus_: PatientQueryResponseGoalMilestoneAchievementStatus = Field(
        None, alias="AchievementStatus"
    )
    AltCodes_: List[PatientQueryResponseGoalMilestoneAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: PatientQueryResponseGoalMilestoneCodedValue = Field(
        None, alias="CodedValue"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    Priority_: PatientQueryResponseGoalMilestonePriority = Field(None, alias="Priority")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseGoalMilestoneAchievementStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalMilestoneAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalMilestoneCodedValue(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseGoalMilestoneCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalMilestoneCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalMilestonePriority(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseGoalPriority(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeader(RedoxAbstractModel):
    Document_: PatientQueryResponseHeaderDocument = Field(None, alias="Document")
    PCP_: PatientQueryResponseHeaderPCP = Field(None, alias="PCP")
    Patient_: PatientQueryResponseHeaderPatient = Field(None, alias="Patient")


class PatientQueryResponseHeaderDocument(RedoxAbstractModel):
    Author_: PatientQueryResponseHeaderDocumentAuthor = Field(None, alias="Author")
    Confidentiality_: PatientQueryResponseHeaderDocumentConfidentiality = Field(
        None, alias="Confidentiality"
    )
    Custodian_: PatientQueryResponseHeaderDocumentCustodian = Field(
        None, alias="Custodian"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    ID_: Union[str, None] = Field(None, alias="ID")
    Locale_: Union[str, None] = Field(None, alias="Locale")
    Title_: Union[str, None] = Field(None, alias="Title")
    Type_: Union[str, None] = Field(None, alias="Type")
    TypeCode_: PatientQueryResponseHeaderDocumentTypeCode = Field(
        None, alias="TypeCode"
    )


class PatientQueryResponseHeaderDocumentAuthor(RedoxAbstractModel):
    Address_: PatientQueryResponseHeaderDocumentAuthorAddress = Field(
        None, alias="Address"
    )
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: PatientQueryResponseHeaderDocumentAuthorLocation = Field(
        None, alias="Location"
    )
    PhoneNumber_: PatientQueryResponseHeaderDocumentAuthorPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseHeaderDocumentAuthorAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseHeaderDocumentAuthorLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        PatientQueryResponseHeaderDocumentAuthorLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        PatientQueryResponseHeaderDocumentAuthorLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseHeaderDocumentAuthorLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderDocumentAuthorLocationFacilityIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderDocumentAuthorPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class PatientQueryResponseHeaderDocumentConfidentiality(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderDocumentCustodian(RedoxAbstractModel):
    Address_: PatientQueryResponseHeaderDocumentCustodianAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[PatientQueryResponseHeaderDocumentCustodianIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[PatientQueryResponseHeaderDocumentCustodianTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: PatientQueryResponseHeaderDocumentCustodianType = Field(None, alias="Type")


class PatientQueryResponseHeaderDocumentCustodianAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseHeaderDocumentCustodianIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderDocumentCustodianTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseHeaderDocumentCustodianType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseHeaderDocumentCustodianTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderDocumentCustodianTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderDocumentTypeCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderPCP(RedoxAbstractModel):
    Address_: PatientQueryResponseHeaderPCPAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: PatientQueryResponseHeaderPCPLocation = Field(None, alias="Location")
    PhoneNumber_: PatientQueryResponseHeaderPCPPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseHeaderPCPAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseHeaderPCPLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        PatientQueryResponseHeaderPCPLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        PatientQueryResponseHeaderPCPLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseHeaderPCPLocationDepartmentIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderPCPLocationFacilityIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderPCPPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class PatientQueryResponseHeaderPatient(RedoxAbstractModel):
    Demographics_: PatientQueryResponseHeaderPatientDemographics = Field(
        None, alias="Demographics"
    )
    Identifiers_: List[PatientQueryResponseHeaderPatientIdentifier] = Field(
        None, alias="Identifiers"
    )
    Organization_: PatientQueryResponseHeaderPatientOrganization = Field(
        None, alias="Organization"
    )


class PatientQueryResponseHeaderPatientDemographics(RedoxAbstractModel):
    Address_: PatientQueryResponseHeaderPatientDemographicsAddress = Field(
        None, alias="Address"
    )
    DOB_: Union[str, None] = Field(None, alias="DOB")
    DeathDateTime_: Union[str, None] = Field(None, alias="DeathDateTime")
    EmailAddresses_: List[
        PatientQueryResponseHeaderPatientDemographicsEmailAddress
    ] = Field(None, alias="EmailAddresses")
    EthnicGroupCodes_: List[
        PatientQueryResponseHeaderPatientDemographicsEthnicGroupCode
    ] = Field(None, alias="EthnicGroupCodes")
    Ethnicity_: Union[str, None] = Field(None, alias="Ethnicity")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    Language_: Union[str, None] = Field(None, alias="Language")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MaritalStatus_: Union[str, None] = Field(None, alias="MaritalStatus")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    PhoneNumber_: PatientQueryResponseHeaderPatientDemographicsPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Race_: Union[str, None] = Field(None, alias="Race")
    RaceCodes_: List[PatientQueryResponseHeaderPatientDemographicsRaceCode] = Field(
        None, alias="RaceCodes"
    )
    Religion_: Union[str, None] = Field(None, alias="Religion")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class PatientQueryResponseHeaderPatientDemographicsAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseHeaderPatientDemographicsEmailAddress(RedoxAbstractModel):
    Address_: Union[str, None] = Field(None, alias="Address")


class PatientQueryResponseHeaderPatientDemographicsEthnicGroupCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderPatientDemographicsPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")


class PatientQueryResponseHeaderPatientDemographicsRaceCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderPatientIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseHeaderPatientOrganization(RedoxAbstractModel):
    Address_: PatientQueryResponseHeaderPatientOrganizationAddress = Field(
        None, alias="Address"
    )
    Identifiers_: List[PatientQueryResponseHeaderPatientOrganizationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Telecom_: List[PatientQueryResponseHeaderPatientOrganizationTelecom] = Field(
        None, alias="Telecom"
    )
    Type_: PatientQueryResponseHeaderPatientOrganizationType = Field(None, alias="Type")


class PatientQueryResponseHeaderPatientOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseHeaderPatientOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseHeaderPatientOrganizationTelecom(RedoxAbstractModel):
    System_: Union[str, None] = Field(None, alias="System")
    Use_: Union[str, None] = Field(None, alias="Use")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseHeaderPatientOrganizationType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseHeaderPatientOrganizationTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHeaderPatientOrganizationTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHealthConcern(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseHealthConcernAltCode] = Field(
        None, alias="AltCodes"
    )
    Category_: PatientQueryResponseHealthConcernCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseHealthConcernComment] = Field(
        None, alias="Comments"
    )
    ConcernType_: Union[str, None] = Field(None, alias="ConcernType")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: PatientQueryResponseHealthConcernTargetSite = Field(
        None, alias="TargetSite"
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseHealthConcernAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHealthConcernCategory(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseHealthConcernCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHealthConcernCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHealthConcernComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseHealthConcernTargetSite(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseHealthConcernTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseHealthConcernTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseImmunization(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Dose_: PatientQueryResponseImmunizationDose = Field(None, alias="Dose")
    Product_: PatientQueryResponseImmunizationProduct = Field(None, alias="Product")
    Route_: PatientQueryResponseImmunizationRoute = Field(None, alias="Route")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponseImmunizationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponseImmunizationProduct(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseImmunizationProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    LotNumber_: Union[str, None] = Field(None, alias="LotNumber")
    Manufacturer_: Union[str, None] = Field(None, alias="Manufacturer")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseImmunizationProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseImmunizationRoute(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseImmunizationRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseImmunizationRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseInsurance(RedoxAbstractModel):
    AgreementType_: Union[str, None] = Field(None, alias="AgreementType")
    Company_: PatientQueryResponseInsuranceCompany = Field(None, alias="Company")
    CoverageType_: Union[str, None] = Field(None, alias="CoverageType")
    EffectiveDate_: Union[str, None] = Field(None, alias="EffectiveDate")
    ExpirationDate_: Union[str, None] = Field(None, alias="ExpirationDate")
    GroupName_: Union[str, None] = Field(None, alias="GroupName")
    GroupNumber_: Union[str, None] = Field(None, alias="GroupNumber")
    Insured_: PatientQueryResponseInsuranceInsured = Field(None, alias="Insured")
    MemberNumber_: Union[str, None] = Field(None, alias="MemberNumber")
    Plan_: PatientQueryResponseInsurancePlan = Field(None, alias="Plan")
    PolicyNumber_: Union[str, None] = Field(None, alias="PolicyNumber")
    Priority_: Union[str, None] = Field(None, alias="Priority")


class PatientQueryResponseInsuranceCompany(RedoxAbstractModel):
    Address_: PatientQueryResponseInsuranceCompanyAddress = Field(None, alias="Address")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")
    PhoneNumber_: Union[str, None] = Field(None, alias="PhoneNumber")


class PatientQueryResponseInsuranceCompanyAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseInsuranceInsured(RedoxAbstractModel):
    Address_: PatientQueryResponseInsuranceInsuredAddress = Field(None, alias="Address")
    DOB_: Union[str, None] = Field(None, alias="DOB")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    Identifiers_: List[PatientQueryResponseInsuranceInsuredIdentifier] = Field(
        None, alias="Identifiers"
    )
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    Relationship_: Union[str, None] = Field(None, alias="Relationship")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class PatientQueryResponseInsuranceInsuredAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseInsuranceInsuredIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseInsurancePlan(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: Union[str, None] = Field(None, alias="Type")


class PatientQueryResponseMedicalEquipment(RedoxAbstractModel):
    Comments_: List[PatientQueryResponseMedicalEquipmentComment] = Field(
        None, alias="Comments"
    )
    Procedure_: PatientQueryResponseMedicalEquipmentProcedure = Field(
        None, alias="Procedure"
    )
    Product_: PatientQueryResponseMedicalEquipmentProduct = Field(None, alias="Product")
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponseMedicalEquipmentComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseMedicalEquipmentProcedure(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseMedicalEquipmentProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")
    TargetSite_: PatientQueryResponseMedicalEquipmentProcedureTargetSite = Field(
        None, alias="TargetSite"
    )


class PatientQueryResponseMedicalEquipmentProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProcedureTargetSite(RedoxAbstractModel):
    AltCodes_: List[
        PatientQueryResponseMedicalEquipmentProcedureTargetSiteAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProcedureTargetSiteAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProduct(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseMedicalEquipmentProductAltCode] = Field(
        None, alias="AltCodes"
    )
    BrandName_: Union[str, None] = Field(None, alias="BrandName")
    CatalogNumber_: Union[str, None] = Field(None, alias="CatalogNumber")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DeviceID_: Union[str, None] = Field(None, alias="DeviceID")
    DistinctID_: Union[str, None] = Field(None, alias="DistinctID")
    ExpirationDate_: Union[str, None] = Field(None, alias="ExpirationDate")
    Identifiers_: List[PatientQueryResponseMedicalEquipmentProductIdentifier] = Field(
        None, alias="Identifiers"
    )
    Issuer_: Union[str, None] = Field(None, alias="Issuer")
    LotNumber_: Union[str, None] = Field(None, alias="LotNumber")
    ManufactureDate_: Union[str, None] = Field(None, alias="ManufactureDate")
    ManufacturerName_: Union[str, None] = Field(None, alias="ManufacturerName")
    ModelNumber_: Union[str, None] = Field(None, alias="ModelNumber")
    Name_: Union[str, None] = Field(None, alias="Name")
    SafetyObservations_: List[
        PatientQueryResponseMedicalEquipmentProductSafetyObservation
    ] = Field(None, alias="SafetyObservations")
    SerialNumber_: Union[str, None] = Field(None, alias="SerialNumber")
    Status_: PatientQueryResponseMedicalEquipmentProductStatus = Field(
        None, alias="Status"
    )


class PatientQueryResponseMedicalEquipmentProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProductIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseMedicalEquipmentProductSafetyObservation(RedoxAbstractModel):
    AltCodes_: List[
        PatientQueryResponseMedicalEquipmentProductSafetyObservationAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProductSafetyObservationAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicalEquipmentProductStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedication(RedoxAbstractModel):
    Dose_: PatientQueryResponseMedicationDose = Field(None, alias="Dose")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    FreeTextSig_: Union[str, None] = Field(None, alias="FreeTextSig")
    Frequency_: PatientQueryResponseMedicationFrequency = Field(None, alias="Frequency")
    Indications_: List[PatientQueryResponseMedicationIndication] = Field(
        None, alias="Indications"
    )
    IsPRN_: Union[bool, None] = Field(None, alias="IsPRN")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Prescription_: Union[bool, None] = Field(None, alias="Prescription")
    Product_: PatientQueryResponseMedicationProduct = Field(None, alias="Product")
    Rate_: PatientQueryResponseMedicationRate = Field(None, alias="Rate")
    Route_: PatientQueryResponseMedicationRoute = Field(None, alias="Route")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")
    SupplyOrder_: PatientQueryResponseMedicationSupplyOrder = Field(
        None, alias="SupplyOrder"
    )


class PatientQueryResponseMedicationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponseMedicationFrequency(RedoxAbstractModel):
    EventCode_: Union[str, None] = Field(None, alias="EventCode")
    InstitutionSpecified_: Union[bool, None] = Field(None, alias="InstitutionSpecified")
    Period_: Union[str, None] = Field(None, alias="Period")
    PeriodMax_: Union[str, None] = Field(None, alias="PeriodMax")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class PatientQueryResponseMedicationIndication(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseMedicationIndicationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationIndicationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationProduct(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseMedicationProductAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationProductAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponseMedicationRoute(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseMedicationRouteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationRouteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMedicationSupplyOrder(RedoxAbstractModel):
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    NumberOfRefillsRemaining_: Union[float, None] = Field(
        None, alias="NumberOfRefillsRemaining"
    )
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponseMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[PatientQueryResponseMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[PatientQueryResponseMetaLog] = Field(None, alias="Logs")
    Message_: PatientQueryResponseMetaMessage = Field(None, alias="Message")
    Source_: PatientQueryResponseMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: PatientQueryResponseMetaTransmission = Field(
        None, alias="Transmission"
    )


class PatientQueryResponseMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class PatientQueryResponseMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class PatientQueryResponseMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class PatientQueryResponsePlanOfCare(RedoxAbstractModel):
    Encounters_: List[PatientQueryResponsePlanOfCareEncounter] = Field(
        None, alias="Encounters"
    )
    MedicationAdministration_: List[
        PatientQueryResponsePlanOfCareMedicationAdministration
    ] = Field(None, alias="MedicationAdministration")
    Orders_: List[PatientQueryResponsePlanOfCareOrder] = Field(None, alias="Orders")
    Procedures_: List[PatientQueryResponsePlanOfCareProcedure] = Field(
        None, alias="Procedures"
    )
    Services_: List[PatientQueryResponsePlanOfCareService] = Field(
        None, alias="Services"
    )
    Supplies_: List[PatientQueryResponsePlanOfCareSupply] = Field(
        None, alias="Supplies"
    )


class PatientQueryResponsePlanOfCareEncounter(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponsePlanOfCareEncounterAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Identifiers_: List[PatientQueryResponsePlanOfCareEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareEncounterAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponsePlanOfCareMedicationAdministration(RedoxAbstractModel):
    Dose_: PatientQueryResponsePlanOfCareMedicationAdministrationDose = Field(
        None, alias="Dose"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Frequency_: PatientQueryResponsePlanOfCareMedicationAdministrationFrequency = Field(
        None, alias="Frequency"
    )
    Product_: PatientQueryResponsePlanOfCareMedicationAdministrationProduct = Field(
        None, alias="Product"
    )
    Rate_: PatientQueryResponsePlanOfCareMedicationAdministrationRate = Field(
        None, alias="Rate"
    )
    Route_: PatientQueryResponsePlanOfCareMedicationAdministrationRoute = Field(
        None, alias="Route"
    )
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareMedicationAdministrationDose(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponsePlanOfCareMedicationAdministrationFrequency(
    RedoxAbstractModel
):
    Period_: Union[str, None] = Field(None, alias="Period")
    Unit_: Union[str, None] = Field(None, alias="Unit")


class PatientQueryResponsePlanOfCareMedicationAdministrationProduct(RedoxAbstractModel):
    AltCodes_: List[
        PatientQueryResponsePlanOfCareMedicationAdministrationProductAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareMedicationAdministrationProductAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareMedicationAdministrationRate(RedoxAbstractModel):
    Quantity_: Union[str, None] = Field(None, alias="Quantity")
    Units_: Union[str, None] = Field(None, alias="Units")


class PatientQueryResponsePlanOfCareMedicationAdministrationRoute(RedoxAbstractModel):
    AltCodes_: List[
        PatientQueryResponsePlanOfCareMedicationAdministrationRouteAltCode
    ] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareMedicationAdministrationRouteAltCode(
    RedoxAbstractModel
):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareOrder(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponsePlanOfCareOrderAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareOrderAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareProcedure(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponsePlanOfCareProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareService(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponsePlanOfCareServiceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareServiceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponsePlanOfCareSupply(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponsePlanOfCareSupplyAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponsePlanOfCareSupplyAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblem(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProblemAltCode] = Field(None, alias="AltCodes")
    Category_: PatientQueryResponseProblemCategory = Field(None, alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[PatientQueryResponseProblemComment] = Field(None, alias="Comments")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    HealthStatus_: PatientQueryResponseProblemHealthStatus = Field(
        None, alias="HealthStatus"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: PatientQueryResponseProblemStatus = Field(None, alias="Status")


class PatientQueryResponseProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblemCategory(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProblemCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblemCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblemComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseProblemHealthStatus(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProblemHealthStatusAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblemHealthStatusAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProblemStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProcedures(RedoxAbstractModel):
    Observations_: List[PatientQueryResponseProceduresObservation] = Field(
        None, alias="Observations"
    )
    Procedures_: List[PatientQueryResponseProceduresProcedure] = Field(
        None, alias="Procedures"
    )
    Services_: List[PatientQueryResponseProceduresService] = Field(
        None, alias="Services"
    )


class PatientQueryResponseProceduresObservation(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProceduresObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseProceduresObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: PatientQueryResponseProceduresObservationTargetSite = Field(
        None, alias="TargetSite"
    )


class PatientQueryResponseProceduresObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseProceduresObservationTargetSite(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProceduresObservationTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresObservationTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresProcedure(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProceduresProcedureAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseProceduresProcedureComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: PatientQueryResponseProceduresProcedureTargetSite = Field(
        None, alias="TargetSite"
    )


class PatientQueryResponseProceduresProcedureAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresProcedureComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseProceduresProcedureTargetSite(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProceduresProcedureTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresProcedureTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresService(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseProceduresServiceAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseProceduresServiceComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponseProceduresServiceAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseProceduresServiceComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseResolvedProblem(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResolvedProblemAltCode] = Field(
        None, alias="AltCodes"
    )
    Category_: PatientQueryResponseResolvedProblemCategory = Field(
        None, alias="Category"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comment_: Union[str, None] = Field(None, alias="Comment")
    Comments_: List[PatientQueryResponseResolvedProblemComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Status_: PatientQueryResponseResolvedProblemStatus = Field(None, alias="Status")


class PatientQueryResponseResolvedProblemAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResolvedProblemCategory(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResolvedProblemCategoryAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResolvedProblemCategoryAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResolvedProblemComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseResolvedProblemStatus(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResult(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResultAltCode] = Field(None, alias="AltCodes")
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Encounter_: PatientQueryResponseResultEncounter = Field(None, alias="Encounter")
    Name_: Union[str, None] = Field(None, alias="Name")
    Observations_: List[PatientQueryResponseResultObservation] = Field(
        None, alias="Observations"
    )
    Producer_: PatientQueryResponseResultProducer = Field(None, alias="Producer")
    Specimen_: PatientQueryResponseResultSpecimen = Field(None, alias="Specimen")
    Status_: Union[str, None] = Field(None, alias="Status")


class PatientQueryResponseResultAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultEncounter(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Identifiers_: List[PatientQueryResponseResultEncounterIdentifier] = Field(
        None, alias="Identifiers"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Type_: PatientQueryResponseResultEncounterType = Field(None, alias="Type")


class PatientQueryResponseResultEncounterIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class PatientQueryResponseResultEncounterType(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResultEncounterTypeAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultEncounterTypeAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultObservation(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResultObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    CodedValue_: PatientQueryResponseResultObservationCodedValue = Field(
        None, alias="CodedValue"
    )
    Comments_: List[PatientQueryResponseResultObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    ReferenceRange_: PatientQueryResponseResultObservationReferenceRange = Field(
        None, alias="ReferenceRange"
    )
    Status_: Union[str, None] = Field(None, alias="Status")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")
    ValueType_: Union[str, None] = Field(None, alias="ValueType")


class PatientQueryResponseResultObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultObservationCodedValue(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseResultObservationCodedValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultObservationCodedValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseResultObservationReferenceRange(RedoxAbstractModel):
    High_: Union[str, None] = Field(None, alias="High")
    Low_: Union[str, None] = Field(None, alias="Low")
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseResultProducer(RedoxAbstractModel):
    Address_: PatientQueryResponseResultProducerAddress = Field(None, alias="Address")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultProducerAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class PatientQueryResponseResultSpecimen(RedoxAbstractModel):
    CollectionDateTime_: Union[str, None] = Field(None, alias="CollectionDateTime")
    Identifiers_: List[str] = Field(None, alias="Identifiers")
    Source_: PatientQueryResponseResultSpecimenSource = Field(None, alias="Source")
    TargetSite_: PatientQueryResponseResultSpecimenTargetSite = Field(
        None, alias="TargetSite"
    )


class PatientQueryResponseResultSpecimenSource(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseResultSpecimenTargetSite(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseSocialHistory(RedoxAbstractModel):
    Observations_: List[PatientQueryResponseSocialHistoryObservation] = Field(
        None, alias="Observations"
    )
    Pregnancy_: List[PatientQueryResponseSocialHistoryPregnancy] = Field(
        None, alias="Pregnancy"
    )
    TobaccoUse_: List[PatientQueryResponseSocialHistoryTobaccoUse] = Field(
        None, alias="TobaccoUse"
    )


class PatientQueryResponseSocialHistoryObservation(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseSocialHistoryObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseSocialHistoryObservationComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: PatientQueryResponseSocialHistoryObservationValue = Field(
        None, alias="Value"
    )
    ValueText_: Union[str, None] = Field(None, alias="ValueText")


class PatientQueryResponseSocialHistoryObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseSocialHistoryObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseSocialHistoryObservationValue(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseSocialHistoryObservationValueAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseSocialHistoryObservationValueAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseSocialHistoryPregnancy(RedoxAbstractModel):
    Comments_: List[PatientQueryResponseSocialHistoryPregnancyComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    EstimatedDelivery_: Union[str, None] = Field(None, alias="EstimatedDelivery")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class PatientQueryResponseSocialHistoryPregnancyComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseSocialHistoryTobaccoUse(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseSocialHistoryTobaccoUseAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseSocialHistoryTobaccoUseComment] = Field(
        None, alias="Comments"
    )
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    IsSmokingStatus_: Union[bool, None] = Field(None, alias="IsSmokingStatus")
    Name_: Union[str, None] = Field(None, alias="Name")
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class PatientQueryResponseSocialHistoryTobaccoUseAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseSocialHistoryTobaccoUseComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseVitalSign(RedoxAbstractModel):
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Observations_: List[PatientQueryResponseVitalSignObservation] = Field(
        None, alias="Observations"
    )


class PatientQueryResponseVitalSignObservation(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseVitalSignObservationAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Comments_: List[PatientQueryResponseVitalSignObservationComment] = Field(
        None, alias="Comments"
    )
    DateTime_: Union[str, None] = Field(None, alias="DateTime")
    Interpretation_: Union[str, None] = Field(None, alias="Interpretation")
    Name_: Union[str, None] = Field(None, alias="Name")
    Status_: Union[str, None] = Field(None, alias="Status")
    TargetSite_: PatientQueryResponseVitalSignObservationTargetSite = Field(
        None, alias="TargetSite"
    )
    Units_: Union[str, None] = Field(None, alias="Units")
    Value_: Union[str, None] = Field(None, alias="Value")


class PatientQueryResponseVitalSignObservationAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseVitalSignObservationComment(RedoxAbstractModel):
    Text_: Union[str, None] = Field(None, alias="Text")


class PatientQueryResponseVitalSignObservationTargetSite(RedoxAbstractModel):
    AltCodes_: List[PatientQueryResponseVitalSignObservationTargetSiteAltCode] = Field(
        None, alias="AltCodes"
    )
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


class PatientQueryResponseVitalSignObservationTargetSiteAltCode(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    CodeSystem_: Union[str, None] = Field(None, alias="CodeSystem")
    CodeSystemName_: Union[str, None] = Field(None, alias="CodeSystemName")
    Name_: Union[str, None] = Field(None, alias="Name")


PatientQueryResponse.model_rebuild()
PatientQueryResponseAdvanceDirective.model_rebuild()
PatientQueryResponseAdvanceDirectiveCustodian.model_rebuild()
PatientQueryResponseAdvanceDirectiveType.model_rebuild()
PatientQueryResponseAllergy.model_rebuild()
PatientQueryResponseAllergyReaction.model_rebuild()
PatientQueryResponseAllergySubstance.model_rebuild()
PatientQueryResponseAllergyType.model_rebuild()
PatientQueryResponseCareTeam.model_rebuild()
PatientQueryResponseCareTeamEncounter.model_rebuild()
PatientQueryResponseCareTeamEncounterType.model_rebuild()
PatientQueryResponseCareTeamMember.model_rebuild()
PatientQueryResponseCareTeamMemberRole.model_rebuild()
PatientQueryResponseCareTeamOrganization.model_rebuild()
PatientQueryResponseCareTeamOrganizationType.model_rebuild()
PatientQueryResponseCareTeamType.model_rebuild()
PatientQueryResponseEncounter.model_rebuild()
PatientQueryResponseEncounterDiagnosis.model_rebuild()
PatientQueryResponseEncounterDischargeDisposition.model_rebuild()
PatientQueryResponseEncounterLocation.model_rebuild()
PatientQueryResponseEncounterLocationType.model_rebuild()
PatientQueryResponseEncounterProvider.model_rebuild()
PatientQueryResponseEncounterProviderLocation.model_rebuild()
PatientQueryResponseEncounterProviderRole.model_rebuild()
PatientQueryResponseEncounterReasonForVisit.model_rebuild()
PatientQueryResponseEncounterType.model_rebuild()
PatientQueryResponseFamilyHistory.model_rebuild()
PatientQueryResponseFamilyHistoryProblem.model_rebuild()
PatientQueryResponseFamilyHistoryRelation.model_rebuild()
PatientQueryResponseFunctionalStatus.model_rebuild()
PatientQueryResponseFunctionalStatusObservation.model_rebuild()
PatientQueryResponseFunctionalStatusObservationCodedValue.model_rebuild()
PatientQueryResponseFunctionalStatusSupply.model_rebuild()
PatientQueryResponseGoal.model_rebuild()
PatientQueryResponseGoalCodedValue.model_rebuild()
PatientQueryResponseGoalMilestone.model_rebuild()
PatientQueryResponseGoalMilestoneCodedValue.model_rebuild()
PatientQueryResponseHeader.model_rebuild()
PatientQueryResponseHeaderDocument.model_rebuild()
PatientQueryResponseHeaderDocumentAuthor.model_rebuild()
PatientQueryResponseHeaderDocumentAuthorLocation.model_rebuild()
PatientQueryResponseHeaderDocumentCustodian.model_rebuild()
PatientQueryResponseHeaderDocumentCustodianType.model_rebuild()
PatientQueryResponseHeaderPatient.model_rebuild()
PatientQueryResponseHeaderPatientDemographics.model_rebuild()
PatientQueryResponseHeaderPatientOrganization.model_rebuild()
PatientQueryResponseHeaderPatientOrganizationType.model_rebuild()
PatientQueryResponseHeaderPCP.model_rebuild()
PatientQueryResponseHeaderPCPLocation.model_rebuild()
PatientQueryResponseHealthConcern.model_rebuild()
PatientQueryResponseHealthConcernCategory.model_rebuild()
PatientQueryResponseHealthConcernTargetSite.model_rebuild()
PatientQueryResponseImmunization.model_rebuild()
PatientQueryResponseImmunizationProduct.model_rebuild()
PatientQueryResponseImmunizationRoute.model_rebuild()
PatientQueryResponseInsurance.model_rebuild()
PatientQueryResponseInsuranceCompany.model_rebuild()
PatientQueryResponseInsuranceInsured.model_rebuild()
PatientQueryResponseMedicalEquipment.model_rebuild()
PatientQueryResponseMedicalEquipmentProcedure.model_rebuild()
PatientQueryResponseMedicalEquipmentProcedureTargetSite.model_rebuild()
PatientQueryResponseMedicalEquipmentProduct.model_rebuild()
PatientQueryResponseMedicalEquipmentProductSafetyObservation.model_rebuild()
PatientQueryResponseMedication.model_rebuild()
PatientQueryResponseMedicationIndication.model_rebuild()
PatientQueryResponseMedicationProduct.model_rebuild()
PatientQueryResponseMedicationRoute.model_rebuild()
PatientQueryResponseMeta.model_rebuild()
PatientQueryResponsePlanOfCare.model_rebuild()
PatientQueryResponsePlanOfCareEncounter.model_rebuild()
PatientQueryResponsePlanOfCareMedicationAdministration.model_rebuild()
PatientQueryResponsePlanOfCareMedicationAdministrationProduct.model_rebuild()
PatientQueryResponsePlanOfCareMedicationAdministrationRoute.model_rebuild()
PatientQueryResponsePlanOfCareOrder.model_rebuild()
PatientQueryResponsePlanOfCareProcedure.model_rebuild()
PatientQueryResponsePlanOfCareService.model_rebuild()
PatientQueryResponsePlanOfCareSupply.model_rebuild()
PatientQueryResponseProblem.model_rebuild()
PatientQueryResponseProblemCategory.model_rebuild()
PatientQueryResponseProblemHealthStatus.model_rebuild()
PatientQueryResponseProcedures.model_rebuild()
PatientQueryResponseProceduresObservation.model_rebuild()
PatientQueryResponseProceduresObservationTargetSite.model_rebuild()
PatientQueryResponseProceduresProcedure.model_rebuild()
PatientQueryResponseProceduresProcedureTargetSite.model_rebuild()
PatientQueryResponseProceduresService.model_rebuild()
PatientQueryResponseResolvedProblem.model_rebuild()
PatientQueryResponseResolvedProblemCategory.model_rebuild()
PatientQueryResponseResult.model_rebuild()
PatientQueryResponseResultEncounter.model_rebuild()
PatientQueryResponseResultEncounterType.model_rebuild()
PatientQueryResponseResultObservation.model_rebuild()
PatientQueryResponseResultObservationCodedValue.model_rebuild()
PatientQueryResponseResultProducer.model_rebuild()
PatientQueryResponseResultSpecimen.model_rebuild()
PatientQueryResponseSocialHistory.model_rebuild()
PatientQueryResponseSocialHistoryObservation.model_rebuild()
PatientQueryResponseSocialHistoryObservationValue.model_rebuild()
PatientQueryResponseSocialHistoryPregnancy.model_rebuild()
PatientQueryResponseSocialHistoryTobaccoUse.model_rebuild()
PatientQueryResponseVitalSign.model_rebuild()
PatientQueryResponseVitalSignObservation.model_rebuild()
PatientQueryResponseVitalSignObservationTargetSite.model_rebuild()
