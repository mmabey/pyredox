# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class NaturalLanguageProcessingQuery(EventTypeAbstractModel):
    Meta_: NaturalLanguageProcessingQueryMeta = Field(..., alias="Meta")
    Task_: NaturalLanguageProcessingQueryTask = Field(None, alias="Task")
    Text_: NaturalLanguageProcessingQueryText = Field(None, alias="Text")


class NaturalLanguageProcessingQueryMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[NaturalLanguageProcessingQueryMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[NaturalLanguageProcessingQueryMetaLog] = Field(None, alias="Logs")
    Message_: NaturalLanguageProcessingQueryMetaMessage = Field(None, alias="Message")
    Source_: NaturalLanguageProcessingQueryMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: NaturalLanguageProcessingQueryMetaTransmission = Field(
        None, alias="Transmission"
    )


class NaturalLanguageProcessingQueryMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NaturalLanguageProcessingQueryMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class NaturalLanguageProcessingQueryMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NaturalLanguageProcessingQueryMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NaturalLanguageProcessingQueryMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NaturalLanguageProcessingQueryTask(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")


class NaturalLanguageProcessingQueryText(RedoxAbstractModel):
    Contents_: Union[str, None] = Field(None, alias="Contents")


NaturalLanguageProcessingQuery.model_rebuild()
NaturalLanguageProcessingQueryMeta.model_rebuild()
