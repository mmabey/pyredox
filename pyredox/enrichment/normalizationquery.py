# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class NormalizationQuery(EventTypeAbstractModel):
    Entries_: List[NormalizationQueryEntry] = Field(..., alias="Entries")
    Meta_: NormalizationQueryMeta = Field(..., alias="Meta")


class NormalizationQueryEntry(RedoxAbstractModel):
    Category_: str = Field(..., alias="Category")
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Description_: Union[str, None] = Field(None, alias="Description")
    EntryID_: Union[str, None] = Field(None, alias="EntryID")


class NormalizationQueryMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[NormalizationQueryMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[NormalizationQueryMetaLog] = Field(None, alias="Logs")
    Message_: NormalizationQueryMetaMessage = Field(None, alias="Message")
    Source_: NormalizationQueryMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: NormalizationQueryMetaTransmission = Field(
        None, alias="Transmission"
    )


class NormalizationQueryMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NormalizationQueryMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class NormalizationQueryMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NormalizationQueryMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NormalizationQueryMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


NormalizationQuery.model_rebuild()
NormalizationQueryMeta.model_rebuild()
