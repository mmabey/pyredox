# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class New(EventTypeAbstractModel):
    Meta_: NewMeta = Field(..., alias="Meta")
    Providers_: List[NewProvider] = Field(..., alias="Providers")


class NewMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[NewMetaDestination] = Field(None, alias="Destinations")
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[NewMetaLog] = Field(None, alias="Logs")
    Message_: NewMetaMessage = Field(None, alias="Message")
    Source_: NewMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: NewMetaTransmission = Field(None, alias="Transmission")


class NewMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NewMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class NewMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NewMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class NewMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class NewProvider(RedoxAbstractModel):
    Demographics_: NewProviderDemographics = Field(None, alias="Demographics")
    Identifiers_: List[NewProviderIdentifier] = Field(..., alias="Identifiers")
    IsActive_: bool = Field(..., alias="IsActive")
    Qualifications_: List[NewProviderQualification] = Field(
        None, alias="Qualifications"
    )
    Roles_: List[NewProviderRole] = Field(None, alias="Roles")


class NewProviderDemographics(RedoxAbstractModel):
    Addresses_: List[NewProviderDemographicsAddress] = Field(None, alias="Addresses")
    Credentials_: List[str] = Field(None, alias="Credentials")
    DOB_: Union[str, None] = Field(None, alias="DOB")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    Languages_: List[str] = Field(None, alias="Languages")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    PhoneNumber_: NewProviderDemographicsPhoneNumber = Field(None, alias="PhoneNumber")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class NewProviderDemographicsAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    Use_: Union[str, None] = Field(None, alias="Use")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class NewProviderDemographicsPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")
    Office_: Union[str, None] = Field(None, alias="Office")


class NewProviderIdentifier(RedoxAbstractModel):
    ID_: str = Field(..., alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderQualification(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Description_: Union[str, None] = Field(None, alias="Description")
    EndDate_: Union[str, None] = Field(None, alias="EndDate")
    Identifiers_: List[NewProviderQualificationIdentifier] = Field(
        None, alias="Identifiers"
    )
    StartDate_: Union[str, None] = Field(None, alias="StartDate")


class NewProviderQualificationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderRole(RedoxAbstractModel):
    Availability_: List[NewProviderRoleAvailability] = Field(None, alias="Availability")
    Identifiers_: List[NewProviderRoleIdentifier] = Field(None, alias="Identifiers")
    Locations_: List[NewProviderRoleLocation] = Field(None, alias="Locations")
    Organization_: NewProviderRoleOrganization = Field(None, alias="Organization")
    Services_: List[NewProviderRoleService] = Field(None, alias="Services")
    Specialties_: List[NewProviderRoleSpecialty] = Field(None, alias="Specialties")


class NewProviderRoleAvailability(RedoxAbstractModel):
    AvailableEndTime_: Union[str, None] = Field(None, alias="AvailableEndTime")
    AvailableStartTime_: Union[str, None] = Field(None, alias="AvailableStartTime")
    Days_: List[str] = Field(None, alias="Days")


class NewProviderRoleIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderRoleLocation(RedoxAbstractModel):
    Address_: NewProviderRoleLocationAddress = Field(None, alias="Address")
    Description_: Union[str, None] = Field(None, alias="Description")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    Identifiers_: List[NewProviderRoleLocationIdentifier] = Field(
        None, alias="Identifiers"
    )
    Name_: Union[str, None] = Field(None, alias="Name")
    PhoneNumber_: NewProviderRoleLocationPhoneNumber = Field(None, alias="PhoneNumber")
    Status_: Union[str, None] = Field(None, alias="Status")


class NewProviderRoleLocationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class NewProviderRoleLocationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderRoleLocationPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class NewProviderRoleOrganization(RedoxAbstractModel):
    Address_: NewProviderRoleOrganizationAddress = Field(None, alias="Address")
    Identifiers_: List[NewProviderRoleOrganizationIdentifier] = Field(
        None, alias="Identifiers"
    )
    IsActive_: Union[str, None] = Field(None, alias="IsActive")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: Union[str, None] = Field(None, alias="Type")


class NewProviderRoleOrganizationAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class NewProviderRoleOrganizationIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderRoleService(RedoxAbstractModel):
    Description_: Union[str, None] = Field(None, alias="Description")
    Identifiers_: List[NewProviderRoleServiceIdentifier] = Field(
        None, alias="Identifiers"
    )
    PhoneNumber_: NewProviderRoleServicePhoneNumber = Field(None, alias="PhoneNumber")
    Type_: Union[str, None] = Field(None, alias="Type")


class NewProviderRoleServiceIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class NewProviderRoleServicePhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class NewProviderRoleSpecialty(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Description_: Union[str, None] = Field(None, alias="Description")


New.model_rebuild()
NewMeta.model_rebuild()
NewProvider.model_rebuild()
NewProviderDemographics.model_rebuild()
NewProviderQualification.model_rebuild()
NewProviderRole.model_rebuild()
NewProviderRoleLocation.model_rebuild()
NewProviderRoleOrganization.model_rebuild()
NewProviderRoleService.model_rebuild()
