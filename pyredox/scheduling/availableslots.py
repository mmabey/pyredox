# -*- coding: utf-8 -*-
# ----  AUTO-GENERATED BY gen_redox_lib. DO NOT MODIFY MANUALLY!!  ---- #

from __future__ import annotations

from typing import List, Union

from pydantic import Field

from ..abstract_base import EventTypeAbstractModel, RedoxAbstractModel


class AvailableSlots(EventTypeAbstractModel):
    EndDateTime_: Union[str, None] = Field(None, alias="EndDateTime")
    Meta_: AvailableSlotsMeta = Field(..., alias="Meta")
    Patient_: AvailableSlotsPatient = Field(None, alias="Patient")
    StartDateTime_: str = Field(..., alias="StartDateTime")
    Visit_: AvailableSlotsVisit = Field(None, alias="Visit")


class AvailableSlotsMeta(RedoxAbstractModel):
    DataModel_: str = Field(..., alias="DataModel")
    Destinations_: List[AvailableSlotsMetaDestination] = Field(
        None, alias="Destinations"
    )
    EventDateTime_: Union[str, None] = Field(None, alias="EventDateTime")
    EventType_: str = Field(..., alias="EventType")
    FacilityCode_: Union[str, None] = Field(None, alias="FacilityCode")
    Logs_: List[AvailableSlotsMetaLog] = Field(None, alias="Logs")
    Message_: AvailableSlotsMetaMessage = Field(None, alias="Message")
    Source_: AvailableSlotsMetaSource = Field(None, alias="Source")
    Test_: Union[bool, None] = Field(None, alias="Test")
    Transmission_: AvailableSlotsMetaTransmission = Field(None, alias="Transmission")


class AvailableSlotsMetaDestination(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class AvailableSlotsMetaLog(RedoxAbstractModel):
    AttemptID_: Union[str, None] = Field(None, alias="AttemptID")
    ID_: Union[str, None] = Field(None, alias="ID")


class AvailableSlotsMetaMessage(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class AvailableSlotsMetaSource(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    Name_: Union[str, None] = Field(None, alias="Name")


class AvailableSlotsMetaTransmission(RedoxAbstractModel):
    ID_: Union[float, None] = Field(None, alias="ID")


class AvailableSlotsPatient(RedoxAbstractModel):
    Demographics_: AvailableSlotsPatientDemographics = Field(None, alias="Demographics")
    Diagnoses_: List[AvailableSlotsPatientDiagnosis] = Field(None, alias="Diagnoses")
    Identifiers_: List[AvailableSlotsPatientIdentifier] = Field(
        None, alias="Identifiers"
    )
    Notes_: List[str] = Field(None, alias="Notes")


class AvailableSlotsPatientDemographics(RedoxAbstractModel):
    Address_: AvailableSlotsPatientDemographicsAddress = Field(None, alias="Address")
    Citizenship_: List[str] = Field(None, alias="Citizenship")
    DOB_: Union[str, None] = Field(None, alias="DOB")
    DeathDateTime_: Union[str, None] = Field(None, alias="DeathDateTime")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    IsDeceased_: Union[bool, None] = Field(None, alias="IsDeceased")
    IsHispanic_: Union[bool, None] = Field(None, alias="IsHispanic")
    Language_: Union[str, None] = Field(None, alias="Language")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    MaritalStatus_: Union[str, None] = Field(None, alias="MaritalStatus")
    MiddleName_: Union[str, None] = Field(None, alias="MiddleName")
    PhoneNumber_: AvailableSlotsPatientDemographicsPhoneNumber = Field(
        None, alias="PhoneNumber"
    )
    Race_: Union[str, None] = Field(None, alias="Race")
    Religion_: Union[str, None] = Field(None, alias="Religion")
    SSN_: Union[str, None] = Field(None, alias="SSN")
    Sex_: Union[str, None] = Field(None, alias="Sex")


class AvailableSlotsPatientDemographicsAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class AvailableSlotsPatientDemographicsPhoneNumber(RedoxAbstractModel):
    Home_: Union[str, None] = Field(None, alias="Home")
    Mobile_: Union[str, None] = Field(None, alias="Mobile")
    Office_: Union[str, None] = Field(None, alias="Office")


class AvailableSlotsPatientDiagnosis(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    DocumentedDateTime_: Union[str, None] = Field(None, alias="DocumentedDateTime")
    Name_: Union[str, None] = Field(None, alias="Name")
    Type_: Union[str, None] = Field(None, alias="Type")


class AvailableSlotsPatientIdentifier(RedoxAbstractModel):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class AvailableSlotsVisit(RedoxAbstractModel):
    AttendingProviders_: List[AvailableSlotsVisitAttendingProvider] = Field(
        None, alias="AttendingProviders"
    )
    Locations_: List[AvailableSlotsVisitLocation] = Field(None, alias="Locations")
    Reasons_: List[str] = Field(None, alias="Reasons")
    VisitPreference_: List[AvailableSlotsVisitVisitPreference] = Field(
        None, alias="VisitPreference"
    )
    VisitType_: List[AvailableSlotsVisitVisitType] = Field(None, alias="VisitType")


class AvailableSlotsVisitAttendingProvider(RedoxAbstractModel):
    Address_: AvailableSlotsVisitAttendingProviderAddress = Field(None, alias="Address")
    Credentials_: List[str] = Field(None, alias="Credentials")
    EmailAddresses_: List[str] = Field(None, alias="EmailAddresses")
    FirstName_: Union[str, None] = Field(None, alias="FirstName")
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")
    LastName_: Union[str, None] = Field(None, alias="LastName")
    Location_: AvailableSlotsVisitAttendingProviderLocation = Field(
        None, alias="Location"
    )
    PhoneNumber_: AvailableSlotsVisitAttendingProviderPhoneNumber = Field(
        None, alias="PhoneNumber"
    )


class AvailableSlotsVisitAttendingProviderAddress(RedoxAbstractModel):
    City_: Union[str, None] = Field(None, alias="City")
    Country_: Union[str, None] = Field(None, alias="Country")
    County_: Union[str, None] = Field(None, alias="County")
    State_: Union[str, None] = Field(None, alias="State")
    StreetAddress_: Union[str, None] = Field(None, alias="StreetAddress")
    ZIP_: Union[str, None] = Field(None, alias="ZIP")


class AvailableSlotsVisitAttendingProviderLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    DepartmentIdentifiers_: List[
        AvailableSlotsVisitAttendingProviderLocationDepartmentIdentifier
    ] = Field(None, alias="DepartmentIdentifiers")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    FacilityIdentifiers_: List[
        AvailableSlotsVisitAttendingProviderLocationFacilityIdentifier
    ] = Field(None, alias="FacilityIdentifiers")
    Room_: Union[str, None] = Field(None, alias="Room")
    Type_: Union[str, None] = Field(None, alias="Type")


class AvailableSlotsVisitAttendingProviderLocationDepartmentIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class AvailableSlotsVisitAttendingProviderLocationFacilityIdentifier(
    RedoxAbstractModel
):
    ID_: Union[str, None] = Field(None, alias="ID")
    IDType_: Union[str, None] = Field(None, alias="IDType")


class AvailableSlotsVisitAttendingProviderPhoneNumber(RedoxAbstractModel):
    Office_: Union[str, None] = Field(None, alias="Office")


class AvailableSlotsVisitLocation(RedoxAbstractModel):
    Department_: Union[str, None] = Field(None, alias="Department")
    Facility_: Union[str, None] = Field(None, alias="Facility")
    ID_: Union[str, None] = Field(None, alias="ID")
    Room_: Union[str, None] = Field(None, alias="Room")
    SpecialtyDepartment_: AvailableSlotsVisitLocationSpecialtyDepartment = Field(
        None, alias="SpecialtyDepartment"
    )
    Type_: Union[str, None] = Field(None, alias="Type")


class AvailableSlotsVisitLocationSpecialtyDepartment(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Description_: Union[str, None] = Field(None, alias="Description")


class AvailableSlotsVisitVisitPreference(RedoxAbstractModel):
    Day_: List[str] = Field(None, alias="Day")
    Duration_: Union[str, None] = Field(None, alias="Duration")
    DurationUnit_: Union[str, None] = Field(None, alias="DurationUnit")
    Time_: List[str] = Field(None, alias="Time")


class AvailableSlotsVisitVisitType(RedoxAbstractModel):
    Code_: Union[str, None] = Field(None, alias="Code")
    Codeset_: Union[str, None] = Field(None, alias="Codeset")
    Description_: Union[str, None] = Field(None, alias="Description")


AvailableSlots.model_rebuild()
AvailableSlotsMeta.model_rebuild()
AvailableSlotsPatient.model_rebuild()
AvailableSlotsPatientDemographics.model_rebuild()
AvailableSlotsVisit.model_rebuild()
AvailableSlotsVisitAttendingProvider.model_rebuild()
AvailableSlotsVisitAttendingProviderLocation.model_rebuild()
AvailableSlotsVisitLocation.model_rebuild()
